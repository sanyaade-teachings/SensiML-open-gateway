{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/Status/Status.js","components/Configure/Scan.js","components/WebCamera/Camera.js","components/WebCamera/WebCamera.js","components/Configure/Configure.js","redux/actions/actionTypes/index.js","components/SensorStream/SensorDataChart.js","components/SensorStream/SensorStream.js","redux/selectors/sensorData/index.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Record/Record.js","configs/index.js","components/TestMode/TestMode.js","redux/selectors/classes/index.js","components/Main/Main.js","redux/sagas/errors/index.js","services/StreamReader/errors.js","services/StreamReader/index.js","redux/repositories/StreamSensorReader.js","redux/sagas/stream/watchStreamSensorStart.js","redux/sagas/stream/watchStreamSensorStop.js","redux/sagas/stream/index.js","redux/sagas/sensorData/watchSetChunkSensorData.js","redux/sagas/sensorData/index.js","services/api/index.js","redux/sagas/classes/index.js","redux/sagas/index.js","redux/reducers/root/index.js","redux/reducers/errors/index.js","redux/reducers/stream/index.js","redux/reducers/sensorData/index.js","redux/reducers/classes/index.js","redux/reducers/version/index.js","redux/reducers/index.js","redux/store.jsx","App.js","services/VersionCheck/index.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","secondaryRed","red","notSelected","blueGrey","error","record","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","section1","margin","update_available_button","borderColor","no_update_available_button","visibility","InconSelector","index","Connected","Grid","isConnected","style","fontSize","green","grey","updateClicked","window","open","nb","connect","state","localVersion","versionData","cloudVersion","updateAvailable","console","log","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","Divider","isCameraConnected","Button","startIcon","Update","toolbar","alignItems","mixins","minWidth","bullet","transform","title","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","align","name","list","dense","value","split","details","flexDirection","flex","controls","Status","container","rows","config","mode","source","device_id","sample_rate","column_location","formControl","AlertDialog","React","useState","setOpen","setIsScanning","deviceRows","setDeviceRows","setScanHelperText","scanningText","setScanningText","handleClose","handleDeviceScan","axios","post","process","toLowerCase","then","response","data","catch","detail","join","status","headers","request","disabled","configuring","fullWidth","preventDefault","Dialog","onClose","maxWidth","DialogContent","DialogContentText","height","columns","field","headerName","onRowClick","handleRowSelection","DialogActions","autoFocus","Camera","cameraKey","Box","cameraViewWrapper","src","alt","paddingLeft","paddingBottom","section2","textAlign","divWrapper","minHeight","selectWrapper","selectSource","selectLoading","lineHeight","handleCameraRequest","setCameraView","setIsCameraConnected","setCameraKey","indexSource","camera_index","event_type","Math","random","toString","substring","WebCamera","videoSourceList","setVideoSourceList","SOURCE_SCREEN_INDEX","videoSource","setVideoSource","videoSourceLoading","setVideoSourceLoading","videoSourceLoadError","setVideoSourceLoadError","loadVideoSource","a","get","video_sources","_","isEmpty","isArray","mainSource","find","el","useEffect","getVideoSourceName","useCallback","component","FormControl","sx","m","InputLabel","id","Select","labelId","e","target","label","sourceCam","MenuItem","FormHelperText","Tooltip","IconButton","size","Boolean","Configure","streamingSource","setSource","streamingMode","setMode","deviceID","setDeviceID","setError","helperText","setHelperText","setIsConfiguring","mapdata","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","sort","setStreamingSource","camera_on","setBaudRate","baud_rate","setConfig","toUpperCase","Card","CardContent","Fragment","type","res","onSubmit","baudRate","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","TextField","SET_GLOBAL_LOADER","FETCH_DATA_ERROR_MSG","SET_DATA_ERROR_MSG","START_STREAM_SENSOR_SAGA","STOP_STREAM_SENSOR_SAGA","SET_IS_STREAMING_SENSOR","SET_IS_STREAMING_SENSOR_RECORDING","SET_STREAM_SENSOR_DATA_RESET","SET_CHUNK_SENSOR_DATA_SAGA","SET_STREAM_SENSOR_DATA","SET_STREAM_SENSOR_RECORD_DATA","FETCH_CLASS_MAP_IMAGES","SET_CLASS_MAP_IMAGES","UPDATE_CLOUD_VERSION","UPDATE_LOCAL_VERSION","UPDATE_AVAILABLE","SensorDataChart","sensorData","countSamples","revision","setRevision","opacity","length","x","layout","visible","autosize","l","r","b","t","pad","xaxis","autorange","yaxis","cardWrapper","dataWrapper","chartWrapper","buttonWrapper","marginLeft","zeroOpacity","SensorStream","COUNT_SAMPLES","dispatch","useDispatch","isSplitCharts","SetIsSplitCharts","useSelector","stream","isStreamingSensor","isStreamingSensorRecording","Array","fill","calibration","setCalibration","column","sensorSimpleData","includes","push","result","y","sum","conversion","forEach","i","weight_index","array_index","floor","val","parseInt","sensorDataForChart","startSensorStreaming","payload","dataType","stopSensorStreaming","setClearStream","calibrateWeight","c","reduce","slice","calculateCalibration","Switch","checked","inputProps","ResultsFilter","filter_length","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","handleStreamRequest","url","setStreamCallback","setIsStreaming","setReader","fetch","method","reader","body","getReader","ReadableStream","start","controller","read","done","close","results","array","String","fromCharCode","apply","pop","JSON","parse","bin2String","Response","Results","isStreaming","filterLength","setfilterLength","setLastValue","last","cancel","handleStopStreaming","alignContent","Slider","newValue","min","pageSize","sortModel","Record","isRecording","recording","setRecording","filename","setFilename","recordDistabled","setRecordDistabled","handleRecordRequest","blob","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","handleDownloadRequest","APP_API_URL","apiHosts","classImageWrapper","classImage","TestMode","currentClass","setCurrentClass","classMapImages","classNameValid","imgPath","Paper","imageWrapperCard","Main","activeView","setActiveView","setDataType","useSnackbar","enqueueSnackbar","closeSnackbar","errorDataMsg","errors","data_type","alertUser","returnValue","fetchClassMapImages","addEventListener","removeEventListener","useLayoutEffect","CssBaseline","direction","justify","samplerate","handleErrorMsg","watchErrorSaga","action","put","delay","takeEvery","BaseStreamHttpError","errorCode","constructor","Error","StreamReader","fetchUrl","this","undefined","ok","statusText","actionType","arrayType","Float32Array","Int16Array","store","chunk","buffer","streamSensorReader","workerStreamStart","watchStreamSensorStart","call","debug","takeLatest","workerStreamStop","watchStreamSensorStop","streamSagas","all","fork","workerSetStreamChunkSensorData","watchSetChunkSensorData","chunkLength","updatedSensorSimpleData","select","sensorRecordedData","left","right","chunkI","sensorDataSagas","ApiService","interceptor_401","refreshUrl","init","baseURL","defaults","mount401Interceptor","interceptors","use","unmount401Interceptor","eject","setCustomAuthHeader","common","Authorization","setContentType","contentType","removeHeader","resource","delete","customRequest","customJsonRequest","setAuthHeader","classesMapImagesSagas","reponse","acc","img","rootSaga","classesSagas","initialState","globalLoader","rootData","streamData","classesData","createAppReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","composedEnhancers","composeWithDevTools","applyMiddleware","appReducer","createStore","run","App","updateVersion","versionCheck","checkUpdate","anchorOrigin","horizontal","vertical","autoHideDuration","VersionCheck","cloudURL","baseurl","cloudurl","localResponse","cloudResp","SensiML_Open_Gateway_Windows","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5fd71017.chunk.js","sourcesContent":["import React from \"react\";\nimport { blueGrey, deepOrange, lightBlue, red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, MuiThemeProvider, useTheme, } from \"@material-ui/core/styles\";\n\nconst LightTheme = (props) => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800]),\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500]),\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600]),\n      },\n      secondaryRed: {\n        light: red[600],\n        main: red[700],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[600]),\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600]),\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n      record: {\n        light: red[900],\n        main: red[900],\n        dark: red[900],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import { AppBar, Button, Toolbar, Typography, Divider } from \"@material-ui/core\";\nimport { Update } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\n\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import { Button, Grid, Link, Typography } from \"@material-ui/core\";\nimport { green, grey } from '@material-ui/core/colors';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { Update } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  section1: {\n    margin: theme.spacing(2, 1),\n  },\n  update_available_button: {\n    color: 'primary',\n    borderColor: 'primary',\n    variant: 'outlined',\n  },\n  no_update_available_button: {\n    visibility: `hidden`\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <HomeIcon />;\n    case 1:\n      return <AssessmentIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst Connected = (props) => {\n  return (\n    <Grid>\n      {props.isConnected ? (\n        <Typography> <FiberManualRecordIcon\n          style={{ fontSize: 16, color: green[500] }}></FiberManualRecordIcon> Connected </Typography>\n\n      ) : (\n        <Typography> <FiberManualRecordIcon\n          style={{ fontSize: 16, color: grey[500] }}> </FiberManualRecordIcon> Not Connected </Typography>\n      )}\n    </Grid>\n  );\n};\n\nconst localprops = {\n  localVersion: \"\",\n  cloudVersion: \"\",\n  updateAvailable: false,\n};\n\nconst mapStateToProps = (state) => ({\n  localVersion: state.versionData.localVersion,\n  cloudVersion: state.versionData.cloudVersion,\n  updateAvailable: state.versionData.updateAvailable,\n});\n\nfunction updateClicked() {\n  window.open('https://github.com/sensiml/open-gateway/releases', '_blank');\n}\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  console.log(props);\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Home\", \"Test Mode\"].map((text, index) => (\n            <ListItem button key={text} onClick={handleMenu(index)}>\n              <ListItemIcon>\n                <InconSelector index={index}> </InconSelector>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n          <div className={classes.section1}>\n            <Divider></Divider>\n          </div>\n          <ListItem>\n            <Typography color='primary'>Device Status</Typography>\n          </ListItem>\n          <ListItem>\n            <Connected\n              text=\"Device\"\n              isConnected={props.isConnected}\n            ></Connected>\n          </ListItem>\n          <ListItem>\n            <Typography color='primary'>Video Status</Typography>\n          </ListItem>\n          <ListItem>\n            <Connected\n              text=\"Video\"\n              isConnected={props.isCameraConnected}\n            ></Connected>\n          </ListItem>\n          <ListItem>\n            <Typography color='primary'>Version</Typography>\n          </ListItem>\n          <ListItem>\n            <Typography color='black'>{props.localVersion}</Typography>\n          </ListItem>\n          <ListItem><Button\n            aria-multiline={true} startIcon={<Update />} onClick={updateClicked}\n            className={props.updateAvailable ? classes.update_available_button : classes.no_update_available_button}>Update\n            Available: {props.cloudVersion}</Button>\n          </ListItem>\n        </List>\n\n      </div>\n    </Drawer>\n  );\n};\nconst nb = connect(mapStateToProps)(NavBar)\nexport default nb;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 5, 5, 35),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import { Grid } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Typography align=\"center\" className={classes.title} color=\"textPrimary\">\n        {props.name}\n      </Typography>\n      {props.list ? (\n        <div className={classes.bullet}>\n          <List dense={true}>\n            {props.value.split(\",\").map((value) => (\n              <ListItem>\n                <ListItemText align=\"center\" primary={value} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ) : (\n        <Typography\n          align=\"center\"\n          className={classes.pos}\n          color=\"textSecondary\"\n        >\n          {props.value}\n        </Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { SimpleCard } from \"../SimpleCard\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 2, 0),\n  },\n}));\n\nconst Status = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Grid container rows spacing={4}>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard name=\"Mode\" xs=\"6\" value={props.config.mode}></SimpleCard>\n        <SimpleCard\n          name=\"Source\"\n          xs=\"6\"\n          value={props.config.source}\n        ></SimpleCard>\n      </Grid>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard\n          name=\"Device ID\"\n          xs={6}\n          value={props.config.device_id}\n        ></SimpleCard>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            xs=\"6\"\n            name=\"Sample Rate\"\n            value={props.config.sample_rate}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n      <Grid item xs={12}>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            name=\"Sensor Columns\"\n            value={props.config.column_location}\n            list={true}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DialogContentText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(1, 1),\n  },\n}));\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scanning, setIsScanning] = React.useState(false);\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const classes = useStyles();\n  const [scanningText, setScanningText] = React.useState(\"Scanning\");\n\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ];\n\n  const handleClickOpen = (event) => {\n    setDeviceRows([]);\n    setOpen(true);\n    event.preventDefault();\n    handleDeviceScan();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDeviceScan = () => {\n    setScanningText(\"Scanning for \" + props.source + \" Devices....\");\n    setIsScanning(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: props.source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIsScanning(false);\n        setDeviceRows(response.data);\n        setScanningText(\"Scanning complete\");\n      })\n      .catch(function (error) {\n        setIsScanning(false);\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={props.configuring}\n        fullWidth={true}\n        onClick={handleClickOpen}\n        className={classes.button}\n      >\n        Scan for {props.source} Devices\n      </Button>\n      <Dialog open={open} onClose={handleClose} fullWidth=\"sm\" maxWidth=\"sm\">\n        <DialogContent>\n          <DialogContentText>{scanningText}</DialogContentText>\n\n          <div style={{ height: 600, width: \"100%\" }}>\n            <DataGrid\n              rows={deviceRows}\n              columns={deviceColumns}\n              onRowClick={props.handleRowSelection}\n\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            select\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n} from \"@material-ui/core\";\n\n\nconst Camera = ({ cameraKey, classes, isCameraConnected }) => {\n  return (\n    <Box className={classes.cameraViewWrapper}>\n    { isCameraConnected ?\n      <img\n        src={`http://localhost:5555/stream-video?${cameraKey}`}\n        alt=\"Camera\"\n      />\n      : \"Video Source is not connected\"\n    }\n    </Box>\n  );\n};\n\nexport default Camera;\n","import _ from \"lodash\";\nimport React, { useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  Tooltip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  FormHelperText,\n  IconButton,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Camera from \"./Camera\";\n\nconst SOURCE_SCREEN_INDEX = -1;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 3, 0),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 800,\n    minHeight: 800,\n  },\n  selectWrapper: {\n    height: \"3.25rem\",\n  },\n  selectSource: {\n    width: \"100%\",\n  },\n  selectLoading: {\n    lineHeight: 3.25,\n  },\n  cameraViewWrapper: {\n    minHeight: \"480px\",\n    minWidth: \"640px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }\n}));\n\nconst handleCameraRequest = (\n  event,\n  setCameraView,\n  setIsCameraConnected,\n  setCameraKey,\n  indexSource,\n) => {\n  console.log(event);\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}config-video`, {\n      camera_index: indexSource,\n      event_type: event,\n    })\n    .then((response) => {\n      console.log(response.data);\n      if (event === \"camera-on\") {\n        setCameraView(true);\n        setIsCameraConnected(true);\n        setCameraKey(Math.random().toString(36).substring(7));\n        console.log(\"caera event\");\n        console.log(event);\n      }\n      if (event === \"camera-off\") {\n        setCameraView(false);\n        setIsCameraConnected(false);\n        console.log(\"caera event\");\n        console.log(event);\n      }\n    });\n};\n\nconst WebCamera = (props) => {\n  const classes = useStyles();\n  const [cameraView, setCameraView] = React.useState(false);\n  const [cameraKey, setCameraKey] = React.useState(\"\");\n  const [videoSourceList, setVideoSourceList] = React.useState([]);\n  const [videoSource, setVideoSource] = React.useState(SOURCE_SCREEN_INDEX - 1);\n  const [videoSourceLoading, setVideoSourceLoading] = React.useState(false);\n  const [videoSourceLoadError, setVideoSourceLoadError] = React.useState(\"\");\n\n  const loadVideoSource = async () => {\n    setVideoSourceLoadError(\"\");\n    setVideoSourceLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}scan-video`, {})\n      const { video_sources } = response.data;\n      if (!_.isEmpty(video_sources) && _.isArray(video_sources)) {\n        const mainSource = video_sources.find(el => el.index === 0);\n        setVideoSourceList(video_sources);\n        setVideoSource(mainSource.index);\n      }\n    } catch (e) {\n      setVideoSourceLoadError(\"Failed to load video sources, please, try again\");\n    }\n    setVideoSourceLoading(false);\n  };\n\n  useEffect(() => {\n    loadVideoSource();\n  }, []);\n\n  const getVideoSourceName = useCallback(() => {\n    // useCallback\n    const name = \"Camera\";\n    if (!_.isEmpty(videoSourceList) && _.isArray(videoSourceList)) {\n      return videoSourceList.find(el => el.index === videoSource)?.name || name;\n    }\n    return name;\n  }, [videoSource]);\n\n  const handleUpdateVideoSourceList = () => {\n    loadVideoSource();\n  };\n\n  const handleCameraSourceSelect = (e) => {\n    setVideoSource(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Video Source\n        </Typography>\n      </div>\n      <div className={classes.section1}>\n        <Divider variant=\"middle\" />\n      </div>\n\n      <Camera\n        classes={classes}\n        cameraKey={cameraKey}\n        isCameraConnected={props.isCameraConnected}\n      ></Camera>\n      <div className={classes.section2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n      </div>\n\n      <div className={classes.details}>\n        <Grid container rows spacing={2}>\n          <Grid item xs={12}>\n            <Box className={classes.selectWrapper} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n              {videoSourceLoadError\n                ? <Typography color=\"error\"> {videoSourceLoadError} </Typography>\n                : videoSourceLoading\n                  ? <Box className={classes.selectLoading}>{\"Loading...\"}</Box>\n                  : <>\n                    <FormControl className={classes.selectSource} variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"video_sources_select_label\">Video Source</InputLabel>\n                      <Select\n                        labelId=\"video_sources_select_label\"\n                        id=\"video_sources_select\"\n                        value={videoSource}\n                        onChange={handleCameraSourceSelect}\n                        label=\"Video source\"\n                        disabled={props.isCameraConnected !== false}\n                      >\n                        {videoSourceList.map(sourceCam =>\n                          <MenuItem value={sourceCam.index} key={`source_select_${sourceCam.index}`}>\n                            {sourceCam.name}\n                          </MenuItem>\n                        )}\n                      </Select>\n                      {props.isCameraConnected !== false\n                        ? <FormHelperText id=\"my-helper-text\">To change souce, first disconnect {getVideoSourceName()}</FormHelperText>\n                        : null\n                      }\n                    </FormControl>\n                    <Tooltip title=\"Reload video sources\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"large\"\n                        color=\"primary\"\n                        disabled={props.isCameraConnected !== false}\n                        onClick={handleUpdateVideoSourceList}\n                      >\n                        <CachedIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                  </>\n              }\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            {props.isCameraConnected === false ? (\n              <Button\n                aria-label=\"Start Camera\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth={true}\n                disabled={Boolean(videoSource < SOURCE_SCREEN_INDEX)}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-on\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource,\n                  );\n                }}\n              >\n                Connect to {getVideoSourceName()}\n              </Button>\n            ) : (\n              <Button\n                aria-label=\"Stop Camera\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth={true}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-off\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource,\n                  );\n                }}\n              >\n                Disconnect {getVideoSourceName()}\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WebCamera;\n","import { Grid, Typography, Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { Status } from \"../Status\";\nimport Scan from \"./Scan\";\nimport { WebCamera } from \"../WebCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 700,\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 1, 0),\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(\n    props.streamingSource ? props.streamingSource : \"SERIAL\"\n  );\n\n  const [mode, setMode] = React.useState(\n    props.streamingMode === \"recognition\" ? \"RECOGNITION\" : \"DATA_CAPTURE\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n\n  const [helperText, setHelperText] = React.useState(\"\");\n\n  const [configuring, setIsConfiguring] = React.useState(false);\n\n\n  const handleRadioChange = (event) => {\n    console.log(\"handle radio\");\n    setSource(event.target.value);\n  };\n\n  const handleDeviceBaudRate = (event) => {\n    console.log(\"handle radio\");\n    props.setBaudRate(event.target.value);\n  };\n\n\n  const handleModeChange = (event) => {\n    console.log(\"handle mode\");\n    setMode(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    console.log(\"handle device id\");\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.row.device_id);\n    setDeviceID(event.row.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    setIsConfiguring(true);\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      setIsConfiguring(false);\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    let data = {\n      device_id: deviceID,\n      source: source.toLowerCase(),\n      mode: mode,\n    }\n    if (source === 'SERIAL') {\n      data.baud_rate = props.baudRate\n    }\n    axios\n      .post(`${process.env.REACT_APP_API_URL}config`, data)\n      .then((response) => {\n        mapdata(response.data);\n        if (response.data.streaming === false) {\n          setHelperText(\"Error starting device, check the logs in the terminal for details for additional details\");\n        }\n        else {\n          setHelperText(\"Device Connected\");\n        }\n        setIsConfiguring(false);\n      })\n      .catch(function (error) {\n        setIsConfiguring(false);\n        if (error.response) {\n          setHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n          setHelperText(error.response.data.detail.join(\", \"));\n        }\n      });\n  };\n\n  const handleDisconnectRequest = (event) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      mapdata(res.data);\n    });\n  };\n\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    props.setIsCameraConnected(data.camera_on);\n    props.setBaudRate(data.baud_rate);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    props.setConfig(data);\n  }\n\n\n  useEffect(() => {\n    setDeviceID(props.deviceID);\n    setSource(props.streamingSource);\n    setMode(props.streamingMode.toUpperCase());\n  }, [props.deviceID, props.streamingMode])\n\n  return (\n    <Grid container columns>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <div className={classes.section1}>\n              <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n                Device Source\n              </Typography>\n            </div>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n            {props.isConnected ? (\n              <React.Fragment>\n                <Status\n                  setStreamingMode={props.setStreamingMode}\n                  setColumns={props.setColumns}\n                  setStreamingSource={props.setStreamingSource}\n                  setDeviceID={props.setDeviceID}\n                  setIsConnected={props.setIsConnected}\n                  isConnected={props.isConnected}\n                  setIsCameraConnected={props.setIsCameraConnected}\n                  isCameraConnected={props.isCameraConnected}\n                  config={props.config}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={configuring}\n                  fullWidth={true}\n                  className={classes.button}\n                  onClick={handleDisconnectRequest}\n                >\n                  Disconnect Device\n                </Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    disabled={configuring || props.isConnected}\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <div>\n                      <FormLabel component=\"legend\">Device Mode:</FormLabel>\n                      <RadioGroup\n                        aria-label=\"mode\"\n                        name=\"Streaming Source\"\n                        value={mode}\n                        onChange={handleModeChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"DATA_CAPTURE\"\n                          control={<Radio />}\n                          label=\"Data Capture\"\n                        />\n                        <FormControlLabel\n                          value=\"RECOGNITION\"\n                          control={<Radio />}\n                          label=\"Recognition\"\n                        />\n                      </RadioGroup>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <div>\n                      <FormLabel>Connection Type</FormLabel>\n                      <RadioGroup\n                        aria-label=\"source\"\n                        value={source}\n                        onChange={handleRadioChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"SERIAL\"\n                          control={<Radio />}\n                          label=\"Serial\"\n                        />\n                        <FormControlLabel\n                          value=\"BLE\"\n                          control={<Radio />}\n                          label=\"BLE\"\n                        />\n                        <FormControlLabel\n                          value=\"TCPIP\"\n                          control={<Radio />}\n                          label=\"TCP/IP\"\n                        />\n                        <FormControlLabel\n                          value=\"TEST\"\n                          control={<Radio />}\n                          label=\"Test\"\n                        />\n                      </RadioGroup>\n                    </div>\n\n                    <Scan\n                      source={source}\n                      handleRowSelection={handleRowSelection}\n                      configuring={configuring}\n                    />\n\n                    <div className={classes.section1}></div>\n\n                    <div>\n                      <FormLabel component=\"legend\">Device ID:</FormLabel>\n                      <TextField\n                        id=\"outlined-basic\"\n                        variant=\"outlined\"\n                        value={deviceID}\n                        onChange={handleDeviceIDChange}\n                        fullWidth={true}\n                      />\n                    </div>\n\n                    <div className={classes.section1}></div>\n\n                    {source === 'SERIAL' ?\n                      <div>\n                        <FormLabel component=\"legend\">Baud Rate:</FormLabel>\n                        <TextField\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          value={props.baudRate}\n                          onChange={handleDeviceBaudRate}\n                          fullWidth={true}\n                        />\n                      </div>\n                      : <div />}\n\n\n\n                    <div className={classes.section1}></div>\n                    <div>\n                      <Grid container columns spacing={2}>\n\n                        <Grid item xs={12}>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={configuring}\n                            fullWidth={true}\n                            className={classes.button}\n                          >\n                            Connect to Device\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <Typography> {helperText}</Typography>\n                  </FormControl>\n                </form>\n              </React.Fragment>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <WebCamera\n              setIsCameraConnected={props.setIsCameraConnected}\n              isCameraConnected={props.isCameraConnected}\n            />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid >\n  );\n};\n\nexport default Configure;\n","// root\nexport const SET_GLOBAL_LOADER = \"SET_GLOBAL_LOADER\";\n\n// errors\nexport const FETCH_DATA_ERROR_MSG = \"FETCH_DATA_ERROR_MSG\";\nexport const SET_DATA_ERROR_MSG = \"SET_DATA_ERROR_MSG\";\n\n// stream\nexport const START_STREAM_SENSOR_SAGA = \"START_STREAM_SENSOR_SAGA\";\nexport const STOP_STREAM_SENSOR_SAGA = \"STOP_STREAM_SENSOR_SAGA\";\nexport const SWITCH_STREAM_SENSOR_RECORD_SAGA =\n  \"SWITCH_STREAM_SENSOR_RECORD_SAGA\";\nexport const SET_IS_STREAMING_SENSOR = \"SET_IS_STREAMING_SENSOR\";\nexport const SET_IS_STREAMING_SENSOR_RECORDING =\n  \"SET_IS_STREAMING_SENSOR_RECORDING\";\nexport const SET_STREAM_SENSOR_DATA_RESET = \"SET_STREAM_SENSOR_DATA_RESET\";\n\n// sensor data\nexport const SET_CHUNK_SENSOR_DATA_SAGA = \"SET_CHUNK_SENSOR_DATA_SAGA\";\nexport const SET_STREAM_SENSOR_DATA = \"SET_STREAM_SENSOR_DATA\";\nexport const SET_STREAM_SENSOR_RECORD_DATA = \"SET_STREAM_SENSOR_RECORD_DATA\";\n\n// classes data\n\nexport const FETCH_CLASS_MAP_IMAGES = \"FETCH_CLASS_MAP_IMAGES\";\nexport const SET_CLASS_MAP_IMAGES = \"SET_CLASS_MAP_IMAGES\";\n\nexport const UPDATE_CLOUD_VERSION = \"UPDATE_CLOUD_VERSION\";\nexport const UPDATE_LOCAL_VERSION = \"UPDATE_LOCAL_VERSION\";\nexport const UPDATE_AVAILABLE = \"UPDATE_AVAILABLE\";\n","import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst SensorDataChart = (props) => {\n  const { sensorData, countSamples, title } = props;\n  const [revision, setRevision] = useState(0);\n  const [opacity, setOpacity] = useState(\"1\");\n\n  useEffect(() => {\n    setRevision(revision + 1);\n    if (sensorData && sensorData.length) {\n      if (sensorData[0].x && sensorData[0].x.length) {\n      }\n    }\n  }, [sensorData]);\n\n  return (\n    <Plot\n      data={sensorData}\n      revision={revision}\n      style={{ width: \"100%\", height: \"100%\", opacity }}\n      layout={{\n        title,\n        visible: false,\n        autosize: true,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4,\n        },\n        xaxis: {\n          autorange: true,\n        },\n        yaxis: {\n          autorange: true,\n        },\n      }}\n    />\n  );\n};\n\nexport default SensorDataChart;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  SET_STREAM_SENSOR_DATA_RESET,\n  START_STREAM_SENSOR_SAGA,\n  STOP_STREAM_SENSOR_SAGA,\n} from \"../../redux/actions/actionTypes\";\nimport {\n  sensorDataForChart,\n  sensorRecordedDataToCsv,\n} from \"../../redux/selectors/sensorData\";\nimport SensorDataChart from \"./SensorDataChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardWrapper: {\n    padding: theme.spacing(2),\n  },\n  dataWrapper: {\n    padding: theme.spacing(2),\n  },\n  chartWrapper: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  zeroOpacity: {\n    opacity: \"0\",\n  },\n}));\n\nconst SensorStream = (props) => {\n  const COUNT_SAMPLES = 1000;\n  const { columns } = props;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isSplitCharts, SetIsSplitCharts] = useState(false);\n  const { isStreamingSensor, isStreamingSensorRecording } = useSelector(\n    (state) => state.stream\n  );\n  const [calibration, setCalibration] = useState(Array(columns.length).fill(0));\n  const sensorData = useSelector(sensorDataForChart(columns, calibration));\n\n  const startSensorStreaming = useCallback(\n    // max array is COUNT_SAMPLES * count of data types\n    () =>\n      dispatch({\n        type: START_STREAM_SENSOR_SAGA,\n        payload: {\n          countSamples: COUNT_SAMPLES * ((columns && columns?.length) || 1),\n          dataType: props.dataType\n        },\n      }),\n    [dispatch]\n  );\n\n  const calculateCalibration = () => {\n    let c = sensorData.map((data) => data.y.reduce((a, b) => (a + b)) / data.y.length);\n    c[c.length - 1] = c.slice(0, c.length - 1).reduce((a, b) => (a + b))\n    setCalibration(c);\n    console.log(calibration);\n  };\n\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const setClearStream = useCallback(\n    () => dispatch({ type: SET_STREAM_SENSOR_DATA_RESET, payload: [] }),\n    [dispatch]\n  );\n\n  const switchSplitChart = () => {\n    SetIsSplitCharts(!isSplitCharts);\n  };\n\n  const manageStream = () => {\n    console.log(\"streaming\", isStreamingSensor);\n    if (isStreamingSensor) {\n      stopSensorStreaming();\n    } else {\n      setClearStream();\n      setCalibration(Array(columns.length).fill(0));\n      startSensorStreaming();\n    }\n  };\n\n  const calibrateWeight = () => {\n    console.log(\"calibrate\", isStreamingSensor);\n    if (isStreamingSensor) {\n      calculateCalibration();\n    }\n  };\n\n  useEffect(() => {\n    if (!props.isConnected && isStreamingSensor) {\n      stopSensorStreaming();\n      setClearStream();\n    }\n\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Test Mode: Data Capture\n        </Typography>\n        <Box className={classes.dataWrapper}>\n          <Box className={classes.chartWrapper}>\n            <Box className={!isStreamingSensor && classes.zeroOpacity}>\n\n              <Switch\n                checked={isSplitCharts}\n                onChange={() => switchSplitChart()}\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />Show Individual Sensors\n\n            </Box>\n            <SensorDataChart\n              title={sensorData[sensorData.length - 1].name}\n              countSamples={COUNT_SAMPLES}\n              sensorData={[sensorData[sensorData.length - 1]]}\n              isStreamingSensor={isStreamingSensor}\n            />\n            {sensorData && sensorData.length && !isSplitCharts ? (\n              <div></div>\n            ) : (\n              <SensorDataChart\n                countSamples={COUNT_SAMPLES}\n                sensorData={sensorData}\n                isStreamingSensor={isStreamingSensor}\n              />\n            )}\n          </Box>\n          <Box className={classes.buttonWrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => manageStream()}\n            >\n              {isStreamingSensor ? \"Stop\" : \"View\"}\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => calibrateWeight()}\n              disabled={!isStreamingSensor}\n            >\n              Zero Scale\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card >\n  );\n};\n\nexport default SensorStream;\n","\nexport const sensorDataForChart = (column, calibration) => (state) => {\n  const { sensorSimpleData } = state.sensorData;\n  if (column.includes('Weight(Kg)') == false) {\n    column.push('Weight(Kg)');\n  }\n  // generate chart zero array\n  const result = column.map(name => {\n    return {\n      x: [],\n      y: [],\n      type: 'scatter',\n      mode: 'lines',\n      name,\n    };\n  });\n\n\n\n\n  // fill result array\n  let sum = 0;\n  const conversion = [0.005473429951690822, // LoadCel_LF\n                        0.00551487290427258, //'LoadCel_LR':'\n                        0.005473429951690822, //'LoadCel_RR':\n                      0.0054911147011308566, //'LoadCel_RF':\n                  ];\n\n                      //  calculated_slope * kg\n  sensorSimpleData.forEach((el, i) => {\n\n    let index = i % (column.length - 1);\n    const weight_index=column.length-1\n    let array_index=Math.floor(i / (column.length - 1));\n    let val =(el - calibration[index])*conversion[index];\n\n    result[index].x.push(array_index);\n    result[index].y.push(val);\n\n    sum += val;\n\n    if (index === column.length - 2) {\n      result[weight_index].x.push(array_index);\n      result[weight_index].y.push(parseInt(sum));\n      sum = 0;\n      //debugger;\n    }\n\n  });\n\n\n  return result;\n};\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setReader\n) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nfunction handleStopStreaming(event, reader, setIsStreaming) {\n  //debugger;\n  console.log(reader);\n  reader.cancel();\n  setIsStreaming(false);\n}\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [reader, setReader] = React.useState();\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"source\", headerName: \"Device ID\", width: 240 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ];\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    setfilterLength(newValue);\n  };\n\n  useEffect(() => {\n    props.setLastValue(_.last(deviceRows));\n  }, [deviceRows]);\n\n  // props.setLastValue(newValue);\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Grid item xs={12}>\n            <Typography\n              align=\"center\"\n              component=\"h2\"\n              variant=\"h2\"\n              color=\"secondary\"\n            >\n              Test Mode: Recognition\n            </Typography>\n          </Grid>\n\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n\n          <Grid item xs={12}>\n            {isStreaming ? (\n              <div className={classes.controls}>\n                <Button\n                  aria-label=\"disconnect\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={() => {\n                    handleStopStreaming(\n                      \"stopstreaming\",\n                      reader,\n                      setIsStreaming\n                    );\n                  }}\n                >\n                  Stop Stream\n                </Button>\n              </div>\n            ) : (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStreamRequest(\n                        \"clicked\",\n                        `${process.env.REACT_APP_API_URL}results`,\n                        setDeviceRows,\n                        setIsStreaming,\n                        setReader\n                      );\n                    }}\n                  >\n                    Start Stream\n                </Button>\n                </div>\n              )}\n          </Grid>\n        </div>\n\n        <Grid item alignContent=\"center\" xs={12}>\n          <ResultsFilter\n            data={deviceRows}\n            filter_length={filterLength}\n          ></ResultsFilter>\n        </Grid>\n\n        <div className={classes.section1}>\n          <Divider variant=\"middle\" />\n        </div>\n\n        <Typography align=\"left\" color=\"primary\" component=\"h5\" variant=\"h5\">\n          Post Processing\n        </Typography>\n\n        <div className={classes.section1}>\n          <Divider variant=\"middle\" />\n        </div>\n\n        <Grid container spacing={4} rows alignItems=\"center\">\n          <Grid item xs={4}>\n            <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n              Buffer\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}>\n            <div className={classes.sliderroot}>\n              <Slider\n                value={typeof filterLength === \"number\" ? filterLength : 1}\n                onChange={handleFilterLengthSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={10}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={1}>\n            <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n              {filterLength}\n            </Typography>\n          </Grid>\n        </Grid>\n        <div className={classes.section1}>\n          <div style={{ height: 600, width: \"100%\" }}>\n            <DataGrid\n              rows={deviceRows}\n              columns={deviceColumns}\n              pageSize={15}\n              sortModel={[{ field: \"id\", sort: \"desc\" }]}\n            />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Results;\n","import {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst Record = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [recording, setRecording] = React.useState(props.isRecording);\n  const [filename, setFilename] = React.useState(\"filename\");\n  const [recordDistabled, setRecordDistabled] = React.useState(false);\n  console.log(\"Connected Camera\");\n  console.log(props.isCameraConnected);\n\n  const handleRecordRequest = (event, url, setRecording, filename) => {\n    setRecordDistabled(true);\n    console.log(event);\n\n    if (filename === \"\") {\n      filename = \"test\";\n    }\n    console.log(filename);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + url, {\n        filename: filename,\n        event_type: event,\n      })\n      .then((response) => {\n        console.log(response.data);\n        if (event === \"record-start\") {\n          setRecording(true);\n          console.log(event);\n        }\n        if (event === \"record-stop\") {\n          setRecording(false);\n          console.log(event);\n        }\n        setRecordDistabled(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setRecordDistabled(false);\n      });\n  };\n\n  const handleDownloadRequest = (event, filename) => {\n    console.log(`${process.env.REACT_APP_API_URL}download/` + filename);\n    fetch(`${process.env.REACT_APP_API_URL}download/` + filename, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/zip\" },\n    })\n      .then((response) => response.blob())\n      .then((blob) => {\n        // Create blob link to download\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", filename + \".zip\");\n\n        // Append to html link element page\n        document.body.appendChild(link);\n\n        // Start download\n        link.click();\n\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n      });\n  };\n  const handleFileNameChange = (event) => {\n    setFilename(event.target.value);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Typography component=\"h4\" variant=\"h4\" color=\"secondary\">\n            Record to Gateway\n          </Typography>\n        </div>\n        <Divider variant=\"middle\" />\n        <div className={classes.section2}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        </div>\n\n        <Grid container columns spacing={6}>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={filename}\n              onChange={handleFileNameChange}\n              fullWidth={true}\n              disabled={recording}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            {recording === false ? (\n              <Tooltip\n                title=\"This will record the device sensor data in .csv format to the gateway.\n                  If video source is connected, the video source will also be recorded.\n                  \"\n                aria-label=\"record\"\n              >\n                <Button\n                  aria-label=\"Record\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  disabled={recordDistabled}\n                  onClick={() => {\n                    handleRecordRequest(\n                      \"record-start\",\n                      props.isCameraConnected ? \"record\" : \"record-device\",\n                      setRecording,\n                      filename\n                    );\n                  }}\n                >\n                  Record\n                </Button>\n              </Tooltip>\n            ) : (\n              <Button\n                aria-label=\"Stop \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleRecordRequest(\n                    \"record-stop\",\n                    props.isCameraConnected ? \"record\" : \"record-device\",\n                    setRecording\n                  );\n                }}\n              >\n                Stop Recording\n              </Button>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            <Tooltip\n              title=\"Download the recorded .csv and .mp4 for this capture from the gateway. A .dcli file will also be generated describing the data.\n                  \"\n              aria-label=\"record\"\n            >\n              <Button\n                aria-label=\"Download \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleDownloadRequest(\"download\", filename);\n                }}\n              >\n                Download\n              </Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Record;\n","export const APP_API_URL = process.env.REACT_APP_API_URL || '/';\nexport const CLOUD_API_URL = process.env.REACT_APP_CLOUD_API_URL || 'https://sensiml.cloud/'\nexport const apiHosts = {\n  baseHost: APP_API_URL,\n  cloudHost: CLOUD_API_URL,\n};\n","import React, { useState } from \"react\";\nimport { Grid, Box, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport { Record } from \"../Record\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectClassImage } from \"../../redux/selectors/classes\"; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  classImageWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    marginTop: \"1rem\",\n    minHeight: \"350px\",\n  },\n\n  classImage: {\n    width: \"90%\",\n  },\n\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n}));\n\nconst TestMode = (props) => {\n  const classes = useStyles();\n  const [currentClass, setCurrentClass] = useState(\"\");\n  const classImage = useSelector(selectClassImage(currentClass));\n\n  const handleLastValue = (value) => {\n    setCurrentClass(value?.Classification || \"\");\n  };\n\n  return (\n    <Grid container rows spacing={6}>\n      {props.streamingMode !== \"recognition\" ? (\n        <Grid item xs={8}>\n          <SensorStream\n            columns={props.columns}\n            isConnected={props.isConnected}\n            dataType={props.dataType}\n          />\n        </Grid>\n      ) : (\n        <Grid item xs={6}>\n          <Results\n            setLastValue={handleLastValue}\n          />\n        </Grid>\n      )}\n      <Grid item xs={4}>\n        <Record\n          isCameraConnected={props.isCameraConnected}\n          isRecording={props.isRecording}\n        />\n        <Paper className={classes.imageWrapperCard}>\n          <Box className={classes.classImageWrapper}>\n            { classImage ?\n              <img  className={classes.classImage} src={classImage} alt={ currentClass }/>\n              : currentClass ? `No Image for ${currentClass}` : \"\"\n            }\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestMode;\n","import _ from \"lodash\";\nimport { APP_API_URL } from \"../../../configs\";\n\nexport const selectClassImage = className => (state) => {\n  const { classMapImages } = state.classes;\n  const classNameValid = _.toString(className);\n\n  if (classMapImages && classNameValid) {\n    const imgPath = classMapImages[classNameValid];\n    if (imgPath) {\n      console.log(\"imgPath\", imgPath)\n      return `${APP_API_URL}${imgPath}`;\n    }\n    return \"\";\n  }\n  return \"\";\n};\n","import React, { useCallback, useEffect, useLayoutEffect } from \"react\";\n\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { TestMode } from \"../TestMode\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector, } from \"react-redux\";\nimport { STOP_STREAM_SENSOR_SAGA, FETCH_CLASS_MAP_IMAGES } from \"../../redux/actions/actionTypes\";\nimport axios from \"axios\";\n\n\nconst Main = (props) => {\n\n  const dispatch = useDispatch();\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState('DATA_CAPTURE');\n  const [streamingSource, setStreamingSource] = React.useState(null);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [isCameraConnected, setIsCameraConnected] = React.useState(false);\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [baudRate, setBaudRate] = React.useState(null);\n  const [config, setConfig] = React.useState({});\n  const [firstLoad, setFirstLoad] = React.useState(null);\n  const [dataType, setDataType] = React.useState('int16');\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isStreamingSensor } = useSelector((state) => state.stream);\n  const { errorDataMsg } = useSelector((state) => state.errors);\n\n  function handleChange(newValue) {\n    if (activeView !== newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  function mapdata(data) {\n    if (data.mode) {\n      setStreamingMode(data.mode);\n    }\n    setIsConnected(data.streaming);\n    setColumns(Object.keys(data.column_location).sort());\n    setStreamingSource(data.source?.toUpperCase());\n    setDeviceID(data.device_id);\n    setIsCameraConnected(data.camera_on);\n    setBaudRate(data.baud_rate);\n\n    switch (data.data_type) {\n      case ('int16'):\n        setDataType('int16');\n        break;\n      case ('float'):\n        setDataType('float');\n        break;\n      default:\n        setDataType('int16');\n    }\n\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    setConfig(data);\n  }\n\n  const alertUser = (e) => {\n    if (isStreamingSensor) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  };\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const fetchClassMapImages = useCallback(\n    () => dispatch({ type: FETCH_CLASS_MAP_IMAGES }),\n    [dispatch]\n  );\n\n  // before leave handler\n  useEffect(() => {\n    if (isStreamingSensor) {\n      window.addEventListener(\"beforeunload\", alertUser);\n      window.addEventListener(\"unload\", stopSensorStreaming);\n      return () => {\n        window.removeEventListener(\"beforeunload\", alertUser);\n        window.removeEventListener(\"unload\", stopSensorStreaming);\n        stopSensorStreaming();\n      };\n    }\n  }, [isStreamingSensor]);\n\n  useEffect(() => {\n    if (errorDataMsg) {\n      enqueueSnackbar(errorDataMsg, { variant: \"warning\" });\n    }\n  }, [errorDataMsg]);\n\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n      console.log(response.data)\n    });\n    fetchClassMapImages();\n  }, [activeView]);\n\n  useLayoutEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n    });\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar\n          onChange={handleChange}\n          isConnected={isConnected}\n          isCameraConnected={isCameraConnected}\n\n        />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Configure\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              isCameraConnected={isCameraConnected}\n              config={config}\n              setConfig={setConfig}\n              streamingSource={streamingSource}\n              baudRate={baudRate}\n              setBaudRate={setBaudRate}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            <TestMode\n              columns={columns}\n              streamingMode={streamingMode}\n              isConnected={isConnected}\n              isRecording={isRecording}\n              isCameraConnected={isCameraConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              samplerate={config.samplerate}\n              dataType={dataType}\n            />\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { call, delay, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_DATA_ERROR_MSG,\n} from \"../../actions/actionTypes\";\n\nfunction* handleErrorMsg(action) {\n  yield put({ type: SET_DATA_ERROR_MSG, payload: action.payload });\n  yield delay(1000);\n  yield put({ type: SET_DATA_ERROR_MSG, payload: null });\n}\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_DATA_ERROR_MSG, handleErrorMsg);\n}\n","export class BaseStreamHttpError extends Error {\n  constructor(errorCode, response) {\n    super();\n    if (errorCode !== 500) {\n      this.detail = response.detail;\n    } else {\n      this.detail = 'Server Error. Please, contact support.';\n    }\n    this.name = this.constructor.name;\n    this.errorCode = errorCode;\n  }\n}","import { BaseStreamHttpError } from \"./errors\";\n\nimport store from \"../../redux/store\";\n\nclass StreamReader {\n  /* *\n   * StreamReader class based on browser fetch method for handling stream data to\n   * @constructs\n   * @param {string} fetchUrl - endpoint fetch url\n   * */\n  constructor(fetchUrl) {\n    /* @param {string} fetchUrl - endpoint fetch url */\n    this.reader = undefined;\n    this.fetchUrl = fetchUrl;\n  }\n\n  async startStreaming() {\n    /*\n      fetch streaming endpoint and setup this.reader\n    */\n    let response;\n    console.log(\"getting response\");\n    try {\n      response = await fetch(this.fetchUrl);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        detail: \"Failed to fetch API service\",\n      });\n    }\n    if (!response.ok) {\n      throw new BaseStreamHttpError(response.status, {\n        detail: response.statusText,\n      });\n    }\n    console.log(\"getting reader\");\n    this.reader = response.body.getReader();\n  }\n\n  async stopStreaming() {\n    if (this.reader) {\n      this.reader.cancel();\n      this.reader = undefined;\n    }\n  }\n\n  async readStreamToRedux(actionType, countSamples = 0, dataType = 'int16') {\n    /*\n      read and write array by chunk to redux\n      @param {string} actionType - redux action const name\n      @param {number} maxLength - max length of redux streamed array\n    * */\n    console.log('DATA TYPE IS ' + dataType);\n    const arrayType = dataType === 'float' ? Float32Array : Int16Array;\n    while (true) {\n      const { value, done } = await this.reader.read();\n      if (done) break;\n      store.dispatch({\n        type: actionType,\n        payload: { chunk: new arrayType(value.buffer), countSamples },\n      });\n    }\n  }\n}\n\nexport { BaseStreamHttpError };\nexport default StreamReader;\n","import StreamReader from \"../../services/StreamReader\";\nimport { apiHosts } from \"../../configs\";\n\nexport let streamSensorReader = undefined;\n\nexport const initStreamSensorReader = () => {\n  streamSensorReader = new StreamReader(`${apiHosts.baseHost}stream`);\n};","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { BaseStreamHttpError } from \"../../../services/StreamReader\";\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_IS_STREAMING_SENSOR,\n  START_STREAM_SENSOR_SAGA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerStreamStart(action) {\n  try {\n    const { countSamples, dataType } = action?.payload;\n    console.log(action.payload);\n\n    yield call([streamSensorReader, \"startStreaming\"]);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: true });\n    yield call(\n      [streamSensorReader, \"readStreamToRedux\"],\n      SET_CHUNK_SENSOR_DATA_SAGA,\n      countSamples,\n      dataType,\n    );\n  } catch (e) {\n    console.debug(e);\n    if (e instanceof BaseStreamHttpError) {\n      yield put({ type: FETCH_DATA_ERROR_MSG, payload: e.detail });\n    } else {\n      yield put({\n        type: FETCH_DATA_ERROR_MSG,\n        payload: \"Failed to read stream data\",\n      });\n    }\n  }\n}\n\nexport default function* watchStreamSensorStart() {\n  yield takeLatest(START_STREAM_SENSOR_SAGA, workerStreamStart);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { SET_IS_STREAMING_SENSOR, STOP_STREAM_SENSOR_SAGA, } from \"../../actions/actionTypes\";\n\n\nfunction* workerStreamStop(action) {\n  try {\n    yield call([streamSensorReader, 'stopStreaming']);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: false });\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchStreamSensorStop() {\n  yield takeLatest(STOP_STREAM_SENSOR_SAGA, workerStreamStop);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchStreamSensorStart from \"./watchStreamSensorStart\";\nimport watchStreamSensorStop from \"./watchStreamSensorStop\";\n\nexport default function* streamSagas() {\n  yield all([\n    fork(watchStreamSensorStart),\n    fork(watchStreamSensorStop),\n  ]);\n}\n\n","import { put, select, takeLatest } from \"redux-saga/effects\";\nimport {\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerSetStreamChunkSensorData(action) {\n  try {\n    const { chunk, countSamples } = action.payload;\n    const chunkLength = (chunk && chunk.length) || 0;\n    let updatedSensorSimpleData = [];\n\n    const { sensorSimpleData, sensorRecordedData } = yield select(\n      (state) => state.sensorData\n    );\n    const { isStreamingSensorRecording } = yield select(\n      (state) => state.stream\n    );\n    console.log(\"called\", chunkLength / (2 * 6));\n\n    // when chunk greater than max of count samples set all chunk data or if countSamples == 0\n    if (chunkLength >= countSamples) {\n      updatedSensorSimpleData = [...chunk];\n    } else if (sensorSimpleData.length >= countSamples) {\n      // when reach countSamples limit\n      updatedSensorSimpleData = [...sensorSimpleData];\n      let [left, right, chunkI] = [0, sensorSimpleData.length, 0];\n      while (left < right) {\n        if (right - left > chunkLength) {\n          updatedSensorSimpleData[left] = sensorSimpleData[left + chunkLength];\n        } else {\n          updatedSensorSimpleData[left] = chunk[chunkI];\n          chunkI++;\n        }\n        left++;\n      }\n    } else {\n      updatedSensorSimpleData = [...sensorSimpleData, ...chunk];\n    }\n\n    yield put({\n      type: SET_STREAM_SENSOR_DATA,\n      payload: updatedSensorSimpleData,\n    });\n    // update whole list if recording\n    if (isStreamingSensorRecording) {\n      yield put({\n        type: SET_STREAM_SENSOR_RECORD_DATA,\n        payload: [...sensorRecordedData, ...chunk],\n      });\n    }\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchSetChunkSensorData() {\n  yield takeLatest(SET_CHUNK_SENSOR_DATA_SAGA, workerSetStreamChunkSensorData);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchSetChunkSensorData from \"./watchSetChunkSensorData\";\n\nexport default function* sensorDataSagas() {\n  yield all([\n    fork(watchSetChunkSensorData),\n  ]);\n}\n","import axios from \"axios\";\n\n\nconst ApiService = {\n  // Stores the 401 interceptor position so that it can be later ejected when needed\n  interceptor_401: null,\n  refreshUrl: '/auth/refresh',\n\n\n  init(baseURL) {\n    axios.defaults.baseURL = baseURL;\n  },\n\n\n  mount401Interceptor() {\n    this.interceptor_401 = axios.interceptors.response.use((response) => response,\n      async (error) => {\n        if (error.request.status === 401) {\n          if (error.config.url.includes('auth')) {\n            // Refresh token has failed or auth endpoint return 401 => Logout the user\n            throw error;\n          } else {\n            // refresh token\n          }\n        }\n        // If error was not 401 just reject as is\n        throw error;\n      });\n  },\n\n\n  unmount401Interceptor() {\n    // Eject the interceptor\n    axios.interceptors.response.eject(this.interceptor_401);\n  },\n\n  setCustomAuthHeader(key) {\n    axios.defaults.headers.common.Authorization = key;\n  },\n\n  setContentType(type) {\n    axios.defaults.headers.contentType = type;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  customRequest(data) {\n    return axios(data);\n  },\n\n  customJsonRequest(data) {\n    this.setAuthHeader();\n    this.setContentType('application/json');\n    return axios(data);\n  },\n\n};\n\nexport default ApiService;\n","/* eslint-disable require-yield */\nimport _ from \"lodash\";\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\n\nimport ApiService from \"../../../services/api\";\nimport {\n  FETCH_CLASS_MAP_IMAGES,\n  SET_CLASS_MAP_IMAGES,\n} from \"../../actions/actionTypes\";\n\n\nfunction* classesMapImagesSagas() {\n  const reponse = yield ApiService.get(\"class-map-images\");\n  yield console.log(\"classesMapImagesSagas\");\n  if (!_.isEmpty(reponse.data)) {\n    const payload = yield _.reduce(reponse.data, (acc, el) => {\n      acc[el.name] = el.img;\n      return acc;\n    }, [{}]);\n    yield put({ type: SET_CLASS_MAP_IMAGES, payload, });\n  }\n};\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_CLASS_MAP_IMAGES, classesMapImagesSagas);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchErrorSaga from \"./errors\";\nimport streamSagas from \"./stream\";\nimport sensorDataSagas from \"./sensorData\";\nimport classesSagas from \"./classes\";\n\nexport default function* rootSaga() {\n  yield all([\n    fork(streamSagas),\n    fork(watchErrorSaga),\n    fork(sensorDataSagas),\n    fork(classesSagas),\n  ]);\n}\n","import {\n  SET_GLOBAL_LOADER,\n} from '../../actions/actionTypes';\n\nconst initialState = {\n  globalLoader: false,\n};\n\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_GLOBAL_LOADER:\n      return {\n        ...state,\n        globalLoader: action.payload || false,\n      };\n    default:\n      return state;\n  }\n}","import { SET_DATA_ERROR_MSG } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  errorDataMsg: null,\n};\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_DATA_ERROR_MSG:\n      return {\n        ...state,\n        errorDataMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import { SET_IS_STREAMING_SENSOR, SET_IS_STREAMING_SENSOR_RECORDING, } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  isStreamingSensor: false,\n  isStreamingSensorRecording: false,\n};\n\nexport default function streamData(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_STREAMING_SENSOR:\n      return {\n        ...state,\n        isStreamingSensor: action.payload,\n      };\n    case SET_IS_STREAMING_SENSOR_RECORDING:\n      return {\n        ...state,\n        isStreamingSensorRecording: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import {\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n  SET_STREAM_SENSOR_DATA_RESET,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  sensorSimpleData: new Int16Array(),\n  sensorRecordedData: new Int16Array(),\n};\n\nexport default function sensorData(state = initialState, action) {\n  switch (action.type) {\n    case SET_STREAM_SENSOR_DATA_RESET:\n      return {\n        ...state,\n        sensorSimpleData: new Int16Array(),\n        sensorRecordedData: new Int16Array(),\n      };\n    case SET_STREAM_SENSOR_DATA:\n      return {\n        ...state,\n        sensorSimpleData: [...action.payload],\n      };\n    case SET_STREAM_SENSOR_RECORD_DATA:\n      return {\n        ...state,\n        sensorRecordedData: [...action.payload],\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CLASS_MAP_IMAGES } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  classMapImages: {},\n};\n\nexport default function classesData(state = initialState, action) {\n  switch (action.type) {\n    case SET_CLASS_MAP_IMAGES:\n      return {\n        ...state,\n        classMapImages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  UPDATE_CLOUD_VERSION,\n  UPDATE_AVAILABLE,\n  UPDATE_LOCAL_VERSION,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  localVersion: \"\",\n  cloudVersion: \"\",\n  updateAvailable: false\n}\n\nexport default function versionData(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CLOUD_VERSION:\n      return {\n        ...state,\n        cloudVersion: action.payload\n      };\n    case UPDATE_AVAILABLE:\n      return {\n        ...state,\n        updateAvailable: state.localVersion < state.cloudVersion\n      };\n    case UPDATE_LOCAL_VERSION:\n      return {\n        ...state,\n        localVersion: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n// modules\nimport rootData from \"./root\";\nimport errors from \"./errors\";\nimport streamData from \"./stream\";\nimport sensorData from \"./sensorData\";\nimport classesData from \"./classes\";\nimport versionData from \"./version\";\n\nconst createAppReducer = () => combineReducers({\n  root: rootData,\n  errors,\n  stream: streamData,\n  sensorData,\n  versionData,\n  classes: classesData,\n});\n\nexport default createAppReducer;\n","import createSagaMiddleware from \"redux-saga\";\n\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootSaga from \"./sagas\";\nimport createAppReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancers = [];\n\nconst middleware = [\n  sagaMiddleware,\n];\n\nconst composedEnhancers = composeWithDevTools(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst appReducer = createAppReducer();\n\nconst store = createStore(\n  appReducer,\n  composedEnhancers,\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import \"./App.css\";\n\nimport React, { useEffect } from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport store from \"./redux/store\";\nimport { initStreamSensorReader } from \"./redux/repositories/StreamSensorReader\";\n\nimport ApiService from \"./services/api\";\nimport { apiHosts } from \"./configs\";\n\nApiService.init(apiHosts.baseHost);\n// initialize StreamSensorReader for handle as entrypoint\ninitStreamSensorReader();\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const updateVersion = async () => {\n      await props.versionCheck.checkUpdate();\n    };\n    updateVersion();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <LightTheme>\n      <Provider store={store}>\n        <SnackbarProvider\n          anchorOrigin={{\n            horizontal: \"right\",\n            vertical: \"top\",\n          }}\n          autoHideDuration={2000}\n        >\n          <Main />\n        </SnackbarProvider>\n      </Provider>\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\nimport { BaseStreamHttpError } from \"../StreamReader\";\nimport store from \"../../redux/store\";\nimport { UPDATE_AVAILABLE, UPDATE_CLOUD_VERSION, UPDATE_LOCAL_VERSION } from \"../../redux/actions/actionTypes\";\n\nexport class VersionCheck {\n  constructor(baseURL, cloudURL) {\n    this.baseurl = baseURL;\n    this.cloudurl = cloudURL;\n    this.localVersion = \"\";\n    this.cloudVersion = \"\";\n    this.updateAvailable = false;\n  }\n\n  async checkUpdate() {\n    let localResponse;\n    let response;\n    try {\n      localResponse = await axios.get(`${this.baseurl}version`);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        detail: \"Failed to fetch API service\",\n      });\n    }\n    if (localResponse.statusText !== \"OK\") {\n      throw new BaseStreamHttpError(response.status, {\n        detail: localResponse.statusText,\n      });\n    }\n    this.localVersion = localResponse.data\n    store.dispatch({ type: UPDATE_LOCAL_VERSION, payload: localResponse.data });\n\n    try {\n      let url = `${this.cloudurl}version/?format=json`\n      response = await axios.get(url, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n    if (response.statusText !== \"OK\") {\n      return;\n    }\n    let cloudResp = response.data;\n    if (cloudResp.SensiML_Open_Gateway_Windows) {\n      this.cloudVersion = cloudResp.SensiML_Open_Gateway_Windows;\n      store.dispatch({ type: UPDATE_CLOUD_VERSION, payload: cloudResp.SensiML_Open_Gateway_Windows });\n      store.dispatch({ type: UPDATE_AVAILABLE, payload: (this.localVersion < this.cloudVersion) });\n    }\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {VersionCheck} from \"./services/VersionCheck\";\nimport {apiHosts} from \"./configs\";\n\nconst versionCheck = new VersionCheck(apiHosts.baseHost, apiHosts.cloudHost);\n\nReactDOM.render(\n  <App versionCheck={versionCheck}/>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}