{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/Status/Status.js","components/Configure/Scan.js","components/WebCamera/Camera.js","components/WebCamera/WebCamera.js","components/Configure/Configure.js","redux/actions/actionTypes/index.js","components/SensorStream/SensorDataChart.js","components/SensorStream/SensorStream.js","redux/selectors/sensorData/index.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Record/Record.js","configs/index.js","components/TestMode/TestMode.js","redux/selectors/classes/index.js","components/Main/Main.js","redux/sagas/errors/index.js","services/StreamReader/errors.js","services/StreamReader/index.js","redux/repositories/StreamSensorReader.js","redux/sagas/stream/watchStreamSensorStart.js","redux/sagas/stream/watchStreamSensorStop.js","redux/sagas/stream/index.js","redux/sagas/sensorData/watchSetChunkSensorData.js","redux/sagas/sensorData/index.js","services/api/index.js","redux/sagas/classes/index.js","redux/sagas/index.js","redux/reducers/root/index.js","redux/reducers/errors/index.js","redux/reducers/stream/index.js","redux/reducers/sensorData/index.js","redux/reducers/classes/index.js","redux/reducers/version/index.js","redux/reducers/index.js","redux/store.jsx","App.js","index.js","services/VersionCheck/index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","secondaryRed","red","notSelected","blueGrey","error","record","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","section1","margin","update_available_button","borderColor","no_update_available_button","visibility","InconSelector","index","Connected","Grid","isConnected","style","fontSize","green","grey","updateClicked","window","open","nb","connect","state","localVersion","versionData","cloudVersion","updateAvailable","console","log","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","Divider","isCameraConnected","Button","aria-multiline","startIcon","Update","toolbar","alignItems","mixins","minWidth","bullet","transform","title","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","align","name","list","dense","value","split","details","flexDirection","flex","controls","Status","container","rows","config","mode","source","device_id","sample_rate","column_location","formControl","AlertDialog","React","useState","setOpen","setIsScanning","deviceRows","setDeviceRows","setScanHelperText","scanningText","setScanningText","handleClose","handleDeviceScan","axios","post","process","toLowerCase","then","response","data","catch","detail","join","status","headers","request","disabled","configuring","fullWidth","preventDefault","Dialog","onClose","maxWidth","DialogContent","DialogContentText","height","columns","field","headerName","onRowSelected","handleRowSelection","pageSize","DialogActions","autoFocus","Camera","cameraKey","Box","cameraViewWrapper","src","alt","paddingLeft","paddingBottom","section2","textAlign","divWrapper","minHeight","selectWrapper","selectSource","selectLoading","lineHeight","handleCameraRequest","setCameraView","setIsCameraConnected","setCameraKey","indexSource","camera_index","event_type","Math","random","toString","substring","WebCamera","videoSourceList","setVideoSourceList","SOURCE_SCREEN_INDEX","videoSource","setVideoSource","videoSourceLoading","setVideoSourceLoading","videoSourceLoadError","setVideoSourceLoadError","loadVideoSource","a","get","video_sources","_","isEmpty","isArray","mainSource","find","el","useEffect","getVideoSourceName","useCallback","component","FormControl","sx","m","InputLabel","id","Select","labelId","e","target","label","sourceCam","MenuItem","FormHelperText","Tooltip","IconButton","aria-label","size","Boolean","Configure","streamingSource","setSource","streamingMode","setMode","deviceID","setDeviceID","setError","helperText","setHelperText","setIsConfiguring","mapdata","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","sort","setStreamingSource","camera_on","setBaudRate","baud_rate","setConfig","toUpperCase","Card","CardContent","Fragment","type","res","onSubmit","baudRate","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","TextField","SET_GLOBAL_LOADER","FETCH_DATA_ERROR_MSG","SET_DATA_ERROR_MSG","START_STREAM_SENSOR_SAGA","STOP_STREAM_SENSOR_SAGA","SET_IS_STREAMING_SENSOR","SET_IS_STREAMING_SENSOR_RECORDING","SET_STREAM_SENSOR_DATA_RESET","SET_CHUNK_SENSOR_DATA_SAGA","SET_STREAM_SENSOR_DATA","SET_STREAM_SENSOR_RECORD_DATA","FETCH_CLASS_MAP_IMAGES","SET_CLASS_MAP_IMAGES","UPDATE_CLOUD_VERSION","UPDATE_LOCAL_VERSION","UPDATE_AVAILABLE","SensorDataChart","sensorData","countSamples","revision","setRevision","opacity","length","x","layout","visible","autosize","l","r","b","t","pad","xaxis","autorange","yaxis","cardWrapper","dataWrapper","chartWrapper","buttonWrapper","marginLeft","zeroOpacity","SensorStream","column","COUNT_SAMPLES","dispatch","useDispatch","isSplitCharts","SetIsSplitCharts","useSelector","stream","isStreamingSensor","isStreamingSensorRecording","sensorSimpleData","result","y","forEach","i","push","floor","startSensorStreaming","payload","dataType","stopSensorStreaming","setClearStream","Switch","checked","inputProps","ResultsFilter","filter_length","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","handleStreamRequest","url","setStreamCallback","setIsStreaming","setReader","fetch","method","reader","body","getReader","ReadableStream","start","controller","read","done","close","results","array","String","fromCharCode","apply","pop","JSON","parse","bin2String","Response","Results","isStreaming","filterLength","setfilterLength","setLastValue","last","cancel","handleStopStreaming","alignContent","Slider","newValue","aria-labelledby","min","sortModel","Record","isRecording","recording","setRecording","filename","setFilename","recordDistabled","setRecordDistabled","handleRecordRequest","blob","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","handleDownloadRequest","APP_API_URL","apiHosts","classImageWrapper","classImage","TestMode","currentClass","setCurrentClass","classMapImages","classNameValid","imgPath","Paper","imageWrapperCard","Main","activeView","setActiveView","setDataType","useSnackbar","enqueueSnackbar","closeSnackbar","errorDataMsg","errors","data_type","alertUser","returnValue","fetchClassMapImages","addEventListener","removeEventListener","useLayoutEffect","CssBaseline","direction","justify","samplerate","handleErrorMsg","watchErrorSaga","action","put","delay","takeEvery","BaseStreamHttpError","errorCode","constructor","Error","StreamReader","fetchUrl","this","undefined","ok","statusText","actionType","arrayType","Float32Array","Int16Array","store","chunk","buffer","streamSensorReader","workerStreamStart","watchStreamSensorStart","call","debug","takeLatest","workerStreamStop","watchStreamSensorStop","streamSagas","all","fork","workerSetStreamChunkSensorData","watchSetChunkSensorData","chunkLength","updatedSensorSimpleData","select","sensorRecordedData","left","right","chunkI","sensorDataSagas","ApiService","interceptor_401","refreshUrl","init","baseURL","defaults","mount401Interceptor","interceptors","use","includes","unmount401Interceptor","eject","setCustomAuthHeader","common","Authorization","setContentType","contentType","removeHeader","resource","delete","customRequest","customJsonRequest","setAuthHeader","classesMapImagesSagas","reponse","reduce","acc","img","rootSaga","classesSagas","initialState","globalLoader","rootData","streamData","classesData","createAppReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","composedEnhancers","composeWithDevTools","applyMiddleware","appReducer","createStore","run","App","versionCheck","checkUpdate","updateVersion","anchorOrigin","horizontal","vertical","autoHideDuration","cloudURL","baseurl","cloudurl","localResponse","cloudResp","SensiML_Open_Gateway_Windows","ReactDOM","render","getElementById"],"mappings":"wSA2DeA,EAvDI,SAACC,GAClB,IAAMC,EAAQC,cAERC,EAAeC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAcV,EAAMI,QAAQO,gBAAgBJ,IAAU,OAExDK,OAAQ,CACNN,MAAOO,IAAW,KAClBL,KAAMK,IAAW,KACjBJ,KAAMI,IAAW,KACjBH,aAAcV,EAAMI,QAAQO,gBAAgBE,IAAW,OAEzDC,UAAW,CACTR,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAcV,EAAMI,QAAQO,gBAAgBJ,IAAU,OAExDQ,aAAc,CACZT,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,OAElDC,YAAa,CACXX,MAAOY,IAAS,KAChBV,KAAMU,IAAS,KACfT,KAAMS,IAAS,KACfR,aAAcV,EAAMI,QAAQO,gBAAgBO,IAAS,OAEvDC,MAAO,CACLb,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,OAElDI,OAAQ,CACNd,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,UAKtD,OACE,cAAC,IAAD,CAAkBhB,MAAOE,EAAzB,SAAwCH,EAAMsB,Y,yCCZnCC,EAVA,WACb,IAAMC,EA5BNC,aAAW,SAACxB,GAAD,MAAY,CACrByB,kBAAmB,CACjBC,QAAQ,OACRC,eAAe,iBAEjBC,eAAgB,CACdF,QAAQ,aACRC,eAAe,iBAEjBE,SAAU,CACRC,eAAe,OACfC,cAAc,YACdC,MAAM,SAERC,OAAQ,CACNC,OAAQlC,EAAMkC,OAAOC,OAAS,MAflCX,GA6BA,OACE,cAACY,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWf,EAAQU,OAA7C,SACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kC,iLClBFC,EAAYlB,aAAW,SAACxB,GAAD,MAAY,CACrC2C,KAAM,CACFjB,QAAS,QAEbO,OAAQ,CACJC,OAAQlC,EAAMkC,OAAOC,OAAS,GAElCA,OAAQ,CACJS,MAVY,IAWZC,WAAY,GAEhBC,YAAa,CACTF,MAdY,KAgBhBG,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASnD,EAAMoD,QAAQ,IAG3BC,SAAU,CACNC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE7BG,wBAAyB,CACrBvB,MAAO,UACPwB,YAAa,UACbf,QAAS,YAEbgB,2BAA4B,CACxBC,WAAW,cAIbC,EAAgB,SAAC5D,GACnB,OAAQA,EAAM6D,OACV,KAAK,EACD,OAAO,cAAC,IAAD,IACX,KAAK,EACD,OAAO,cAAC,IAAD,IACX,QACI,OAAO,cAAC,IAAD,MAIbC,EAAY,SAAC9D,GACf,OACI,cAAC+D,EAAA,EAAD,UACK/D,EAAMgE,YACH,eAACvB,EAAA,EAAD,eAAa,cAAC,IAAD,CACTwB,MAAO,CAACC,SAAU,GAAIjC,MAAOkC,IAAM,QADvC,iBAIA,eAAC1B,EAAA,EAAD,eAAa,cAAC,IAAD,CACTwB,MAAO,CAACC,SAAU,GAAIjC,MAAOmC,IAAK,MADzB,eAAb,wBAmBhB,SAASC,IACLC,OAAOC,KAAK,mDAAoD,UAGpE,IAiEeC,EADJC,aA1Ea,SAACC,GAAD,MAAY,CAChCC,aAAcD,EAAME,YAAYD,aAChCE,aAAcH,EAAME,YAAYC,aAChCC,gBAAiBJ,EAAME,YAAYE,mBAuE5BL,EAhEI,SAACzE,GACZ,IAAMwB,EAAUmB,IAChBoC,QAAQC,IAAIhF,GAKZ,OACI,eAACiF,EAAA,EAAD,CACI1C,UAAWf,EAAQY,OACnBM,QAAQ,YACRlB,QAAS,CACL0D,MAAO1D,EAAQuB,aAJvB,UAOI,cAACP,EAAA,EAAD,IACA,qBAAKD,UAAWf,EAAQwB,gBAAxB,SACI,eAACmC,EAAA,EAAD,WACK,CAAC,OAAQ,aAAaC,KAAI,SAACC,EAAMxB,GAAP,OACvB,eAACyB,EAAA,EAAD,CAAUC,QAAM,EAAYC,SAf5BC,EAegD5B,EAfrC,SAAC6B,GAC5B1F,EAAM2F,SAASF,KAcC,UACI,cAACG,EAAA,EAAD,UACI,cAAC,EAAD,CAAe/B,MAAOA,EAAtB,iBAEJ,cAACgC,EAAA,EAAD,CAAcvF,QAAS+E,MAJLA,GAfvB,IAACI,KAsBJ,qBAAKlD,UAAWf,EAAQ8B,SAAxB,SACI,cAACwC,EAAA,EAAD,MAEJ,cAACR,EAAA,EAAD,UACI,cAAC7C,EAAA,EAAD,CAAYR,MAAM,UAAlB,6BAEJ,cAACqD,EAAA,EAAD,UACI,cAAC,EAAD,CACID,KAAK,SACLrB,YAAahE,EAAMgE,gBAG3B,cAACsB,EAAA,EAAD,UACI,cAAC7C,EAAA,EAAD,CAAYR,MAAM,UAAlB,4BAEJ,cAACqD,EAAA,EAAD,UACI,cAAC,EAAD,CACID,KAAK,QACLrB,YAAahE,EAAM+F,sBAG3B,cAACT,EAAA,EAAD,UACI,cAAC7C,EAAA,EAAD,CAAYR,MAAM,UAAlB,uBAEJ,cAACqD,EAAA,EAAD,UACI,cAAC7C,EAAA,EAAD,CAAYR,MAAM,QAAlB,SAA2BjC,EAAM2E,iBAErC,cAACW,EAAA,EAAD,UAAU,eAACU,EAAA,EAAD,CACLC,kBAAgB,EAAMC,UAAW,cAACC,EAAA,EAAD,IAAWX,QAASnB,EAC9C9B,UAAWvC,EAAM8E,gBAAkBtD,EAAQgC,wBAA0BhC,EAAQkC,2BAF/E,+BAGM1D,EAAM6E,6B,QCnI3BlC,EApBG,kBAChBlB,aAAW,SAACxB,GAAD,MAAY,CACrB2C,KAAM,CACJjB,QAAS,QAEXyE,QAAQ,aACNzE,QAAS,OACT0E,WAAY,SACZzE,eAAgB,WAChBwB,QAASnD,EAAMoD,QAAQ,EAAG,IACvBpD,EAAMqG,OAAOF,SAElBlD,QAAS,CACPC,SAAU,EACVN,MAAO,OACPO,QAASnD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,IAChCzB,eAAgB,eAfpBH,I,iGCKIkB,GAAYlB,YAAW,CAC3BmB,KAAM,CACJ2D,SAAU,KAEZC,OAAQ,CACNC,UAAW,cAEbC,MAAO,CACLxC,SAAU,GACVyC,gBAAiB,WAEnBC,IAAK,CACHC,aAAc,EACdC,UAAW,KAkCAC,GA9BI,SAAC/G,GAClB,IAAMwB,EAAUmB,KAChB,OACE,eAACoB,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAIjH,EAAMiH,GAArB,UACE,cAACxE,EAAA,EAAD,CAAYyE,MAAM,SAAS3E,UAAWf,EAAQkF,MAAOzE,MAAM,cAA3D,SACGjC,EAAMmH,OAERnH,EAAMoH,KACL,qBAAK7E,UAAWf,EAAQgF,OAAxB,SACE,cAACrB,EAAA,EAAD,CAAMkC,OAAO,EAAb,SACGrH,EAAMsH,MAAMC,MAAM,KAAKnC,KAAI,SAACkC,GAAD,OAC1B,cAAChC,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CAAcqB,MAAM,SAAS5G,QAASgH,aAM9C,cAAC7E,EAAA,EAAD,CACEyE,MAAM,SACN3E,UAAWf,EAAQoF,IACnB3E,MAAM,gBAHR,SAKGjC,EAAMsH,YCvCX3E,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvCuH,QAAS,CACP7F,QAAS,OACT8F,cAAe,UAEjBvE,QAAS,CACPwE,KAAM,YAERC,SAAU,CACRhG,QAAS,OACT0E,WAAY,UAEd/C,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,QA6CpBuE,GAzCA,SAAC5H,GACE2C,KACFzC,cAEd,OACE,eAAC6D,EAAA,EAAD,CAAM8D,WAAS,EAACC,MAAI,EAACzE,QAAS,EAA9B,UACE,eAACU,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAIY,WAAS,EAACC,MAAI,EAACzE,QAAS,EAA3C,UACE,cAAC,GAAD,CAAY8D,KAAK,OAAOF,GAAG,IAAIK,MAAOtH,EAAM+H,OAAOC,OACnD,cAAC,GAAD,CACEb,KAAK,SACLF,GAAG,IACHK,MAAOtH,EAAM+H,OAAOE,YAGxB,eAAClE,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAIY,WAAS,EAACC,MAAI,EAACzE,QAAS,EAA3C,UACE,cAAC,GAAD,CACE8D,KAAK,YACLF,GAAI,EACJK,MAAOtH,EAAM+H,OAAOG,YAEC,iBAAtBlI,EAAM+H,OAAOC,KACZ,cAAC,GAAD,CACEf,GAAG,IACHE,KAAK,cACLG,MAAOtH,EAAM+H,OAAOI,cAEpB,QAEN,cAACpE,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACyB,iBAAtBjH,EAAM+H,OAAOC,KACZ,cAAC,GAAD,CACEb,KAAK,iBACLG,MAAOtH,EAAM+H,OAAOK,gBACpBhB,MAAM,IAEN,W,iDCnDNzE,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEX0G,YAAa,CACX9E,OAAQtD,EAAMoD,QAAQ,GACtBkD,SAAU,KAEZhB,OAAQ,CACNhC,OAAQtD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,IAEjCC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,QAId,SAASiF,GAAYtI,GAAQ,IAAD,EACjBuI,IAAMC,UAAS,GADE,mBAClCjE,EADkC,KAC5BkE,EAD4B,OAEPF,IAAMC,UAAS,GAFR,mBAExBE,GAFwB,aAGLH,IAAMC,SAAS,IAHV,mBAGlCG,EAHkC,KAGtBC,EAHsB,OAIGL,IAAMC,SAAS,IAJlB,mBAIlBK,GAJkB,aAKfN,IAAMC,UAAS,GALA,mBAMnChH,GANmC,UAMzBmB,MANyB,EAOD4F,IAAMC,SAAS,YAPd,mBAOlCM,EAPkC,KAOpBC,EAPoB,KAsBnCC,EAAc,WAClBP,GAAQ,IAGJQ,EAAmB,WACvBF,EAAgB,gBAAkB/I,EAAMiI,OAAS,gBACjDS,GAAc,GACdQ,KACGC,KADH,UACWC,yBADX,QACgD,CAC5CnB,OAAQjI,EAAMiI,OAAOoB,gBAEtBC,MAAK,SAACC,GACLxE,QAAQC,IAAIuE,EAASC,MACrBd,GAAc,GACdE,EAAcW,EAASC,MACvBT,EAAgB,wBAEjBU,OAAM,SAAUrI,GACfsH,GAAc,GACVtH,EAAMmI,UAERV,EAAkBzH,EAAMmI,SAASC,KAAKE,OAAOC,KAAK,OAClD5E,QAAQC,IAAI5D,EAAMmI,SAASC,MAC3BzE,QAAQC,IAAI5D,EAAMmI,SAASK,QAC3B7E,QAAQC,IAAI5D,EAAMmI,SAASM,UAClBzI,EAAM0I,QAEf/E,QAAQC,IAAI5D,EAAM0I,SAGlB/E,QAAQC,IAAI,QAAS5D,EAAMsI,YAKnC,OACE,gCACE,eAAC1D,EAAA,EAAD,CACEtD,QAAQ,WACRT,MAAM,UACN8H,SAAU/J,EAAMgK,YAChBC,WAAW,EACXzE,QAjDkB,SAACE,GACvBkD,EAAc,IACdH,GAAQ,GACR/C,EAAMwE,iBACNjB,KA8CI1G,UAAWf,EAAQ+D,OANrB,sBAQYvF,EAAMiI,OARlB,cAUA,eAACkC,GAAA,EAAD,CAAQ5F,KAAMA,EAAM6F,QAASpB,EAAaiB,UAAU,KAAKI,SAAS,KAAlE,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAoBzB,IAEpB,qBAAK7E,MAAO,CAAEuG,OAAQ,IAAK3H,MAAO,QAAlC,SACE,cAAC,KAAD,CACEiF,KAAMa,EACN8B,QAnEQ,CAClB,CAAEC,MAAO,KAAMC,WAAY,KAAM9H,MAAO,GACxC,CAAE6H,MAAO,YAAaC,WAAY,YAAa9H,MAAO,KACtD,CAAE6H,MAAO,OAAQC,WAAY,OAAQ9H,MAAO,MAiElC+H,cAAe5K,EAAM6K,mBACrBC,SAAU,UAIhB,cAACC,GAAA,EAAD,UACE,cAAC/E,EAAA,EAAD,CAAQR,QAASwD,EAAa/G,MAAM,UAAU+I,WAAS,EAAvD,4B,iHCzFKC,GAdA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAW1J,EAAiC,EAAjCA,QAASuE,EAAwB,EAAxBA,kBACpC,OACE,cAACoF,GAAA,EAAD,CAAK5I,UAAWf,EAAQ4J,kBAAxB,SACErF,EACA,qBACEsF,IAAG,6CAAwCH,GAC3CI,IAAI,WAEJ,mCCSF3I,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEX6F,QAAS,CACP7F,QAAS,OACT8F,cAAe,UAEjBvE,QAAS,CACPwE,KAAM,YAERC,SAAU,CACRhG,QAAS,OACT0E,WAAY,SACZkF,YAAatL,EAAMoD,QAAQ,GAC3BmI,cAAevL,EAAMoD,QAAQ,IAE/BC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,IAEjCoI,SAAU,CACRlI,OAAQtD,EAAMoD,QAAQ,GACtBqI,UAAW,UAEbC,WAAY,CACVpI,OAAQtD,EAAMoD,QAAQ,GACtBD,QAASnD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,GAChCgH,SAAU,IACVuB,UAAW,KAEbC,cAAe,CACbrB,OAAQ,WAEVsB,aAAc,CACZjJ,MAAO,QAETkJ,cAAe,CACbC,WAAY,MAEdZ,kBAAmB,CACjBQ,UAAW,QACXrF,SAAU,QACV5E,QAAS,OACT0E,WAAY,SACZzE,eAAgB,cAIdqK,GAAsB,SAC1BvG,EACAwG,EACAC,EACAC,EACAC,GAEAtH,QAAQC,IAAIU,GAEZwD,KACGC,KADH,UACWC,yBADX,gBACwD,CACpDkD,aAAcD,EACdE,WAAY7G,IAEb4D,MAAK,SAACC,GACLxE,QAAQC,IAAIuE,EAASC,MACP,cAAV9D,IACFwG,GAAc,GACdC,GAAqB,GACrBC,EAAaI,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAClD5H,QAAQC,IAAI,eACZD,QAAQC,IAAIU,IAEA,eAAVA,IACFwG,GAAc,GACdC,GAAqB,GACrBpH,QAAQC,IAAI,eACZD,QAAQC,IAAIU,QAmKLkH,GA9JG,SAAC5M,GACjB,IAAMwB,EAAUmB,KADW,EAES4F,IAAMC,UAAS,GAFxB,mBAER0D,GAFQ,aAGO3D,IAAMC,SAAS,IAHtB,mBAGpB0C,EAHoB,KAGTkB,EAHS,OAImB7D,IAAMC,SAAS,IAJlC,mBAIpBqE,EAJoB,KAIHC,EAJG,OAKWvE,IAAMC,UAASuE,GAL1B,mBAKpBC,EALoB,KAKPC,EALO,OAMyB1E,IAAMC,UAAS,GANxC,mBAMpB0E,EANoB,KAMAC,EANA,OAO6B5E,IAAMC,SAAS,IAP5C,mBAOpB4E,EAPoB,KAOEC,EAPF,KASrBC,EAAe,uCAAG,gCAAAC,EAAA,6DACtBF,EAAwB,IACxBF,GAAsB,GAFA,kBAIGjE,KAAMsE,IAAN,UAAapE,yBAAb,cAAwD,IAJ3D,OAIdG,EAJc,OAKZkE,EAAkBlE,EAASC,KAA3BiE,eACHC,KAAEC,QAAQF,IAAkBC,KAAEE,QAAQH,KACnCI,EAAaJ,EAAcK,MAAK,SAAAC,GAAE,OAAiB,IAAbA,EAAGlK,SAC/CiJ,EAAmBW,GACnBR,EAAeY,EAAWhK,QATR,kDAYpBwJ,EAAwB,mDAZJ,QActBF,GAAsB,GAdA,0DAAH,qDAiBrBa,qBAAU,WACRV,MACC,IAEH,IAAMW,EAAqBC,uBAAY,WAErC,IAC+D,EADzD/G,EAAO,SACb,OAAKuG,KAAEC,QAAQd,IAAoBa,KAAEE,QAAQf,KACpC,UAAAA,EAAgBiB,MAAK,SAAAC,GAAE,OAAIA,EAAGlK,QAAUmJ,YAAxC,eAAsD7F,OAExDA,IACN,CAAC6F,IAUJ,OACE,gCACE,qBAAKzK,UAAWf,EAAQ8B,SAAxB,SACE,cAACb,EAAA,EAAD,CAAY0L,UAAU,KAAKzL,QAAQ,KAAKT,MAAM,YAA9C,4BAIF,qBAAKM,UAAWf,EAAQ8B,SAAxB,SACE,cAACwC,EAAA,EAAD,CAASpD,QAAQ,aAGnB,cAAC,GAAD,CACElB,QAASA,EACT0J,UAAWA,EACXnF,kBAAmB/F,EAAM+F,oBAE3B,qBAAKxD,UAAWf,EAAQiK,SAAxB,SACE,cAAChJ,EAAA,EAAD,CAAYC,QAAQ,YAAYT,MAAM,oBAGxC,qBAAKM,UAAWf,EAAQgG,QAAxB,SACE,eAACzD,EAAA,EAAD,CAAM8D,WAAS,EAACC,MAAI,EAACzE,QAAS,EAA9B,UACE,cAACU,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACE,cAACkE,GAAA,EAAD,CAAK5I,UAAWf,EAAQqK,cAAelK,QAAQ,OAAO0E,WAAW,SAASzE,eAAe,SAAzF,SACGwL,EACG,eAAC3K,EAAA,EAAD,CAAYR,MAAM,QAAlB,cAA4BmL,EAA5B,OACAF,EACE,cAAC/B,GAAA,EAAD,CAAK5I,UAAWf,EAAQuK,cAAxB,SAAwC,eACxC,qCACA,eAACqC,GAAA,EAAD,CAAa7L,UAAWf,EAAQsK,aAAcpJ,QAAQ,WAAW2L,GAAI,CAAEC,EAAG,EAAG/H,SAAU,KAAvF,UACE,cAACgI,GAAA,EAAD,CAAYC,GAAG,6BAAf,0BACA,cAACC,GAAA,EAAD,CACEC,QAAQ,6BACRF,GAAG,uBACHlH,MAAO0F,EACPrH,SAvCW,SAACgJ,GAChC1B,EAAe0B,EAAEC,OAAOtH,QAuCJuH,MAAM,eACN9E,UAAsC,IAA5B/J,EAAM+F,kBANlB,SAQG8G,EAAgBzH,KAAI,SAAA0J,GAAS,OAC5B,cAACC,GAAA,EAAD,CAAUzH,MAAOwH,EAAUjL,MAA3B,SACGiL,EAAU3H,MADb,wBAAwD2H,EAAUjL,cAKzC,IAA5B7D,EAAM+F,kBACH,eAACiJ,GAAA,EAAD,CAAgBR,GAAG,iBAAnB,+CAAuEP,OACvE,QAGN,cAACgB,GAAA,EAAD,CAASvI,MAAM,uBAAf,SACE,cAACwI,GAAA,EAAD,CACEC,aAAW,SACXC,KAAK,QACLnN,MAAM,UACN8H,UAAsC,IAA5B/J,EAAM+F,kBAChBP,QAhEc,WAClC8H,KA0DkB,SAOE,cAAC,KAAD,CAAYpJ,SAAS,uBAOnC,cAACH,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,UAC+B,IAA5BjH,EAAM+F,kBACL,eAACC,EAAA,EAAD,CACEmJ,aAAW,eACXzM,QAAQ,YACRT,MAAM,UACNgI,WAAW,EACXF,SAAUsF,QAAQrC,GAzMN,GA0MZxH,QAAS,WACPyG,GACE,YACAC,EACAlM,EAAMmM,qBACNC,EACAY,IAZN,wBAgBciB,OAGd,eAACjI,EAAA,EAAD,CACEmJ,aAAW,cACXlN,MAAM,UACNS,QAAQ,YACRuH,WAAW,EACXzE,QAAS,WACPyG,GACE,aACAC,EACAlM,EAAMmM,qBACNC,EACAY,IAXN,wBAeciB,kBC1OtBtL,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEX0G,YAAa,CACX9E,OAAQtD,EAAMoD,QAAQ,GACtBkD,SAAU,KAEZoF,WAAY,CACVpI,OAAQtD,EAAMoD,QAAQ,GACtBD,QAASnD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,GAChCgH,SAAU,IACV9D,SAAU,KAEZhB,OAAQ,CACNhC,OAAQtD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,IAEjCC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,QAoTpBiM,GAhTG,SAACtP,GACjB,IAAMwB,EAAUmB,KADW,EAEC4F,IAAMC,SAChCxI,EAAMuP,gBAAkBvP,EAAMuP,gBAAkB,UAHvB,mBAEpBtH,EAFoB,KAEZuH,EAFY,OAMHjH,IAAMC,SACJ,gBAAxBxI,EAAMyP,cAAkC,cAAgB,gBAP/B,mBAMpBzH,EANoB,KAMd0H,EANc,OASKnH,IAAMC,SAASxI,EAAM2P,UAT1B,mBASpBA,EAToB,KASVC,EATU,OAUDrH,IAAMC,UAAS,GAVd,mBAUpBpH,EAVoB,KAUbyO,EAVa,OAYStH,IAAMC,SAAS,IAZxB,mBAYpBsH,EAZoB,KAYRC,EAZQ,OAcaxH,IAAMC,UAAS,GAd5B,mBAcpBwB,EAdoB,KAcPgG,EAdO,KAqG3B,SAASC,EAAQzG,GACXA,EAAKxB,MACPhI,EAAMkQ,iBAAiB1G,EAAKxB,MAE9BhI,EAAMmQ,eAAe3G,EAAK4G,WAC1BpQ,EAAMqQ,WAAWC,OAAOC,KAAK/G,EAAKpB,iBAAiBoI,QACnDxQ,EAAMyQ,mBAAmBjH,EAAKvB,QAC9BjI,EAAM4P,YAAYpG,EAAKtB,WACvBlI,EAAMmM,qBAAqB3C,EAAKkH,WAChC1Q,EAAM2Q,YAAYnH,EAAKoH,WACvBpH,EAAKpB,gBACH,oBAAqBoB,EACjB8G,OAAOC,KAAK/G,EAAKpB,iBAAiBoI,OAAO7G,KAAK,MAC9C,GAEN3J,EAAM6Q,UAAUrH,GAUlB,OANAwE,qBAAU,WACR4B,EAAY5P,EAAM2P,UAClBH,EAAUxP,EAAMuP,iBAChBG,EAAQ1P,EAAMyP,cAAcqB,iBAC3B,CAAC9Q,EAAM2P,SAAU3P,EAAMyP,gBAGxB,eAAC1L,EAAA,EAAD,CAAM8D,WAAS,EAAC4C,SAAO,EAAvB,UACE,cAAC1G,EAAA,EAAD,CAAMiD,MAAI,EAAV,SACE,cAAC+J,EAAA,EAAD,CAAMxO,UAAWf,EAAQmK,WAAzB,SACE,eAACqF,EAAA,EAAD,WACE,qBAAKzO,UAAWf,EAAQ8B,SAAxB,SACE,cAACb,EAAA,EAAD,CAAY0L,UAAU,KAAKzL,QAAQ,KAAKT,MAAM,YAA9C,6BAKF,qBAAKM,UAAWf,EAAQ8B,SAAxB,SACE,cAACwC,EAAA,EAAD,CAASpD,QAAQ,aAElB1C,EAAMgE,YACL,eAAC,IAAMiN,SAAP,WACE,cAAC,GAAD,CACEf,iBAAkBlQ,EAAMkQ,iBACxBG,WAAYrQ,EAAMqQ,WAClBI,mBAAoBzQ,EAAMyQ,mBAC1Bb,YAAa5P,EAAM4P,YACnBO,eAAgBnQ,EAAMmQ,eACtBnM,YAAahE,EAAMgE,YACnBmI,qBAAsBnM,EAAMmM,qBAC5BpG,kBAAmB/F,EAAM+F,kBACzBgC,OAAQ/H,EAAM+H,SAEhB,cAAC/B,EAAA,EAAD,CACEkL,KAAK,SACLxO,QAAQ,YACRT,MAAM,UACN8H,SAAUC,EACVC,WAAW,EACX1H,UAAWf,EAAQ+D,OACnBC,QAnEgB,SAACE,GAC/BwD,KAAMsE,IAAN,UAAapE,yBAAb,eAAwDE,MAAK,SAAC6H,GAC5DpM,QAAQC,IAAImM,EAAI3H,MAChByG,EAAQkB,EAAI3H,UAyDF,kCAaF,cAAC,IAAMyH,SAAP,UACE,sBAAMG,SA1HC,SAAC1L,GAGpB,GAFAsK,GAAiB,GACjBtK,EAAMwE,iBACW,KAAbyF,EAGF,OAFAI,EAAc,0BACdC,GAAiB,GAGnBjL,QAAQC,IAAIiD,GACZlD,QAAQC,IAAI2K,GACZ,IAAInG,EAAO,CACTtB,UAAWyH,EACX1H,OAAQA,EAAOoB,cACfrB,KAAMA,GAEO,WAAXC,IACFuB,EAAKoH,UAAY5Q,EAAMqR,UAEzBnI,KACGC,KADH,UACWC,yBADX,UACkDI,GAC/CF,MAAK,SAACC,GACL0G,EAAQ1G,EAASC,MACc,GAA3BD,EAASC,KAAK4G,UAChBL,EAAc,4FAGdA,EAAc,oBAEhBC,GAAiB,MAElBvG,OAAM,SAAUrI,GACf4O,GAAiB,GACb5O,EAAMmI,UACRwG,EAAc3O,EAAMmI,SAASC,KAAKE,OAAOC,KAAK,OAC9C5E,QAAQC,IAAI5D,EAAMmI,SAASC,MAC3BzE,QAAQC,IAAI5D,EAAMmI,SAASK,QAC3B7E,QAAQC,IAAI5D,EAAMmI,SAASM,UAClBzI,EAAM0I,QAEf/E,QAAQC,IAAI5D,EAAM0I,UAGlB/E,QAAQC,IAAI,QAAS5D,EAAMsI,QAC3BqG,EAAc3O,EAAMmI,SAASC,KAAKE,OAAOC,KAAK,YA+ExC,SACE,eAACyE,GAAA,EAAD,CACED,UAAU,WACVpE,SAAUC,GAAehK,EAAMgE,YAC/B5C,MAAOA,EACPmB,UAAWf,EAAQ6G,YAJrB,UAME,gCACE,cAACiJ,GAAA,EAAD,CAAWnD,UAAU,SAArB,0BACA,eAACoD,GAAA,EAAD,CACEpC,aAAW,OACXhI,KAAK,mBACLG,MAAOU,EACPrC,SAxJG,SAACD,GACxBX,QAAQC,IAAI,eACZ0K,EAAQhK,EAAMkJ,OAAOtH,QAuJDkK,KAAG,EALL,UAOE,cAACC,GAAA,EAAD,CACEnK,MAAM,eACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,iBAER,cAAC4C,GAAA,EAAD,CACEnK,MAAM,cACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,sBAIZ,qBAAKtM,UAAWf,EAAQ8B,WACxB,gCACE,cAACgO,GAAA,EAAD,8BACA,eAACC,GAAA,EAAD,CACEpC,aAAW,SACX7H,MAAOW,EACPtC,SAxLI,SAACD,GACzBX,QAAQC,IAAI,gBACZwK,EAAU9J,EAAMkJ,OAAOtH,QAuLHkK,KAAG,EAJL,UAME,cAACC,GAAA,EAAD,CACEnK,MAAM,SACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,WAER,cAAC4C,GAAA,EAAD,CACEnK,MAAM,MACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,QAER,cAAC4C,GAAA,EAAD,CACEnK,MAAM,QACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,WAER,cAAC4C,GAAA,EAAD,CACEnK,MAAM,OACNoK,QAAS,cAACC,GAAA,EAAD,IACT9C,MAAM,eAKZ,cAAC,GAAD,CACE5G,OAAQA,EACR4C,mBA7LO,SAACnF,GAC1BX,QAAQC,IAAIU,EAAM8D,KAAKtB,WACvB0H,EAAYlK,EAAM8D,KAAKtB,YA4LL8B,YAAaA,IAGf,qBAAKzH,UAAWf,EAAQ8B,WAExB,gCACE,cAACgO,GAAA,EAAD,CAAWnD,UAAU,SAArB,wBACA,cAACyD,GAAA,EAAD,CACEpD,GAAG,iBACH9L,QAAQ,WACR4E,MAAOqI,EACPhK,SAhNO,SAACD,GAC5BX,QAAQC,IAAI,oBACZ4K,EAAYlK,EAAMkJ,OAAOtH,OACzByI,EAAc,KACdF,GAAS,IA6MW5F,WAAW,OAIf,qBAAK1H,UAAWf,EAAQ8B,WAEZ,WAAX2E,EACC,gCACE,cAACqJ,GAAA,EAAD,CAAWnD,UAAU,SAArB,wBACA,cAACyD,GAAA,EAAD,CACEpD,GAAG,iBACH9L,QAAQ,WACR4E,MAAOtH,EAAMqR,SACb1L,SAzOK,SAACD,GAC5BX,QAAQC,IAAI,gBACZhF,EAAM2Q,YAAYjL,EAAMkJ,OAAOtH,QAwOT2C,WAAW,OAGb,wBAIJ,qBAAK1H,UAAWf,EAAQ8B,WACxB,8BACE,cAACS,EAAA,EAAD,CAAM8D,WAAS,EAAC4C,SAAO,EAACpH,QAAS,EAAjC,SAEE,cAACU,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACE,cAACjB,EAAA,EAAD,CACEkL,KAAK,SACLxO,QAAQ,YACRT,MAAM,UACN8H,SAAUC,EACVC,WAAW,EACX1H,UAAWf,EAAQ+D,OANrB,qCAaN,qBAAKhD,UAAWf,EAAQ8B,WACxB,eAACb,EAAA,EAAD,eAAcqN,mBAQ5B,cAAC/L,EAAA,EAAD,CAAMiD,MAAI,EAAV,SACE,cAAC+J,EAAA,EAAD,CAAMxO,UAAWf,EAAQmK,WAAzB,SACE,cAACqF,EAAA,EAAD,UACE,cAAC,GAAD,CACE7E,qBAAsBnM,EAAMmM,qBAC5BpG,kBAAmB/F,EAAM+F,8B,mBC7U1B8L,GAAoB,oBAGpBC,GAAuB,uBACvBC,GAAqB,qBAGrBC,GAA2B,2BAC3BC,GAA0B,0BAG1BC,GAA0B,0BAC1BC,GACX,oCACWC,GAA+B,+BAG/BC,GAA6B,6BAC7BC,GAAyB,yBACzBC,GAAgC,gCAIhCC,GAAyB,yBACzBC,GAAuB,uBAEvBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAmB,mB,qBCcjBC,GAxCS,SAAC7S,GAAW,IAC1B8S,EAAoC9S,EAApC8S,WAA0BpM,GAAU1G,EAAxB+S,aAAwB/S,EAAV0G,OADD,EAED8B,mBAAS,GAFR,mBAE1BwK,EAF0B,KAEhBC,EAFgB,OAGHzK,mBAAS,KAHN,mBAG1B0K,EAH0B,UAajC,OARAlF,qBAAU,WACRiF,EAAYD,EAAW,GACnBF,GAAcA,EAAWK,QACvBL,EAAW,GAAGM,GAAKN,EAAW,GAAGM,EAAED,SAGxC,CAACL,IAGF,cAAC,KAAD,CACEtJ,KAAMsJ,EACNE,SAAUA,EACV/O,MAAO,CAAEpB,MAAO,OAAQ2H,OAAQ,OAAQ0I,WACxCG,OAAQ,CACN3M,QACA4M,SAAS,EACTC,UAAU,EACVhQ,OAAQ,CACNiQ,EAAG,GACHC,EAAG,GACHC,EAAG,IACHC,EAAG,IACHC,IAAK,GAEPC,MAAO,CACLC,WAAW,GAEbC,MAAO,CACLD,WAAW,OCbfnR,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC+T,YAAa,CACX5Q,QAASnD,EAAMoD,QAAQ,IAEzB4Q,YAAa,CACX7Q,QAASnD,EAAMoD,QAAQ,IAEzB6Q,aAAc,CACZrR,MAAO,OACPU,OAAQtD,EAAMoD,QAAQ,IAExB8Q,cAAe,CACbxS,QAAS,OACTmF,UAAW7G,EAAMoD,QAAQ,IAE3BkC,OAAQ,CACN6O,WAAYnU,EAAMoD,QAAQ,IAE5BgR,YAAa,CACXnB,QAAS,SA6GEoB,GAzGM,SAACtU,GACpB,IC/CgCuU,ED+C1BC,EAAgB,IACd/J,EAAYzK,EAAZyK,QACFjJ,EAAUmB,KACV8R,EAAWC,cAJa,EAKYlM,oBAAS,GALrB,mBAKvBmM,EALuB,KAKRC,EALQ,OAM4BC,aACxD,SAACnQ,GAAD,OAAWA,EAAMoQ,UADXC,EANsB,EAMtBA,kBAGFjC,GATwB,EAMHkC,2BAGRH,aCvDaN,EDuDkB9J,ECvDR,SAAC/F,GAAW,IAC9CuQ,EAAqBvQ,EAAMoO,WAA3BmC,iBAEFC,EAASX,EAAOnP,KAAI,SAAA+B,GACxB,MAAO,CACLiM,EAAG,GACH+B,EAAG,GACHjE,KAAM,UACNlJ,KAAM,QACNb,WAQJ,OAJA8N,EAAiBG,SAAQ,SAACrH,EAAIsH,GAC5BH,EAAOG,EAAId,EAAOpB,QAAQC,EAAEkC,KAAK9I,KAAK+I,MAAMF,EAAId,EAAOpB,SACvD+B,EAAOG,EAAId,EAAOpB,QAAQgC,EAAEG,KAAKvH,MAE5BmH,MDwCDM,EAAuBtH,uBAE3B,kBACEuG,EAAS,CACPvD,KAAMc,GACNyD,QAAS,CACP1C,aAAcyB,GAAkB/J,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAS0I,SAAW,GAC/DuC,SAAU1V,EAAM0V,cAGtB,CAACjB,IAGGkB,EAAsBzH,uBAC1B,kBAAMuG,EAAS,CAAEvD,KAAMe,OACvB,CAACwC,IAGGmB,EAAiB1H,uBACrB,kBAAMuG,EAAS,CAAEvD,KAAMkB,GAA8BqD,QAAS,OAC9D,CAAChB,IAyBH,OARAzG,qBAAU,YACHhO,EAAMgE,aAAe+Q,IACxBY,IACAC,OAGD,IAGD,cAAC7E,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACvO,EAAA,EAAD,CAAY0L,UAAU,KAAKzL,QAAQ,KAAKT,MAAM,YAA9C,qCAGA,eAACkJ,GAAA,EAAD,CAAK5I,UAAWf,EAAQyS,YAAxB,UACE,eAAC9I,GAAA,EAAD,CAAK5I,UAAWf,EAAQ0S,aAAxB,UACE,eAAC/I,GAAA,EAAD,CAAK5I,WAAYwS,GAAqBvT,EAAQ6S,YAA9C,UACE,cAACwB,GAAA,EAAD,CACEC,QAASnB,EACThP,SAAU,WAhCtBiP,GAAkBD,IAiCNoB,WAAY,CAAE,aAAc,wBAC3B,IALL,kBAQCjD,GAAcA,EAAWK,QAAUwB,EAClC7B,EAAW1N,KAAI,SAACoE,GAAD,OACb,cAAC,GAAD,CACE9C,MAAO8C,EAAKrC,KACZ4L,aAAcyB,EACd1B,WAAY,CAACtJ,GACbuL,kBAAmBA,OAIvB,cAAC,GAAD,CACEhC,aAAcyB,EACd1B,WAAYA,EACZiC,kBAAmBA,OAIzB,cAAC5J,GAAA,EAAD,CAAK5I,UAAWf,EAAQ2S,cAAxB,SACE,cAACnO,EAAA,EAAD,CACEtD,QAAQ,YACRT,MAAM,UACNM,UAAWf,EAAQ+D,OACnBC,QAAS,kBAvDnBT,QAAQC,IAAI,YAAa+P,QACrBA,EACFY,KAEAC,IACAJ,OA8CM,SAMGT,EAAoB,OAAS,oB,mBElG7BiB,GAzCO,SAAChW,GAkCrB,OACE,cAACyC,EAAA,EAAD,CAAYyE,MAAM,SAASxE,QAAQ,KAAKyL,UAAU,KAAlD,SAlCF,SAAoB3E,EAAMyM,GACxB,GAAoB,IAAhBzM,EAAK2J,OACP,MAAO,aAGL8C,EAAgBzM,EAAK2J,SACvB8C,EAAgBzM,EAAK2J,OAAS,GAIhC,IADA,IAAI7E,EAAI,GACC+G,EAAI7L,EAAK2J,OAAS8C,EAAeZ,EAAI7L,EAAK2J,OAAQkC,IACrD7L,EAAK6L,GAAGa,kBAAkB5H,EAC5BA,EAAE9E,EAAK6L,GAAGa,iBAAmB,EAE7B5H,EAAE9E,EAAK6L,GAAGa,gBAAkB,EAMhC,IAFA,IAAIrS,EAAQ,EACRsS,EAAM,EACV,MAA2B7F,OAAO8F,QAAQ9H,GAA1C,eAA8C,CAAC,IAAD,sBAAlC+H,EAAkC,KAA7B/O,EAA6B,KACxCA,EAAQ6O,IACVA,EAAM7O,EACNzD,EAAQwS,GAIZ,OAAIF,EAAMF,EAAgB,EACjB,MAEFpS,EAKJyS,CAAWtW,EAAMwJ,KAAMxJ,EAAMiW,kBC5BhCM,GAAa,EAEX5T,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC0H,SAAU,CACRhG,QAAS,OACT0E,WAAY,SACZkF,YAAatL,EAAMoD,QAAQ,GAC3BmI,cAAevL,EAAMoD,QAAQ,IAE/BT,KAAM,CACJC,MAAO,SAET2T,WAAY,CACV3T,MAAO,QAET4T,YAAa,CACX5T,MAAO,IAETS,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE3BoI,SAAU,CACRlI,OAAQtD,EAAMoD,QAAQ,GACtBqI,UAAW,cAaf,IAAMgL,GAAsB,SAC1BhR,EACAiR,EACAC,EACAC,EACAC,GAEAP,GAAa,EACbK,EAAkB,IAClBC,GAAe,GACfE,MAAMJ,EAAK,CACTK,OAAQ,QACP1N,MAAK,SAACC,GACP,IAAM0N,EAAS1N,EAAS2N,KAAKC,YAC7BL,EAAUG,GACV,IAAMnC,EAAS,IAAIsC,eAAe,CAChCC,MADgC,SAC1BC,IAEJ,SAAShC,IAEP2B,EAAOM,OAAOjO,MAAK,YAAsB,IAAnBkO,EAAkB,EAAlBA,KAAMlQ,EAAY,EAAZA,MAE1B,GAAIkQ,EAIF,OAFAX,GAAe,QACfS,EAAWG,QAIb,IADA,IAAIC,EArChB,SAAoBC,GAClB,IAAID,EAAUE,OAAOC,aAAaC,MAAM,KAAMH,GAAOpQ,MAAM,MAG3D,OAFAmQ,EAAQK,MAEDL,EAAQtS,KAAI,SAACgO,GAClB,OAAO4E,KAAKC,MAAM7E,MAgCI8E,CAAW5Q,GAChB+N,EAAI,EAAGA,EAAIqC,EAAQvE,OAAQkC,IAClCtQ,QAAQC,IAAI0S,EAAQrC,IACpBqC,EAAQrC,GAAG7G,GAAK+H,GAChBA,IAAc,EACdK,GAAkB,SAACxD,GAAD,6BAAWA,GAAX,CAAcsE,EAAQrC,QAG1CC,OAIJA,MAIJ,OAAO,IAAI6C,SAASrD,EAAQ,CAAEjL,QAAS,CAAE,eAAgB,mBAW7D,IAkJeuO,GAlJC,SAACpY,GAAW,IAAD,EACWuI,IAAMC,SAAS,IAD1B,mBAClBG,EADkB,KACNC,EADM,OAEaL,IAAMC,UAAS,GAF5B,mBAElB6P,EAFkB,KAELxB,EAFK,OAGGtO,IAAMC,WAHT,mBAGlByO,EAHkB,KAGVH,EAHU,OAUevO,IAAMC,SAAS,GAV9B,mBAUlB8P,EAVkB,KAUJC,EAVI,KAYnB/W,EAAUmB,KACFzC,cAYd,OANA8N,qBAAU,WACRhO,EAAMwY,aAAa9K,KAAE+K,KAAK9P,MACzB,CAACA,IAKF,cAACoI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,sBAAKzO,UAAWf,EAAQ8B,SAAxB,UACE,cAACS,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACE,cAACxE,EAAA,EAAD,CACEyE,MAAM,SACNiH,UAAU,KACVzL,QAAQ,KACRT,MAAM,YAJR,sCAUF,qBAAKM,UAAWf,EAAQ8B,SAAxB,SACE,cAACwC,EAAA,EAAD,CAASpD,QAAQ,aAGnB,cAACqB,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACGoR,EACC,qBAAK9V,UAAWf,EAAQmG,SAAxB,SACE,cAAC3B,EAAA,EAAD,CACEmJ,aAAW,aACXlN,MAAM,UACNS,QAAQ,YACRuH,WAAW,EACXzE,QAAS,YA3D3B,SAA6BE,EAAOuR,EAAQJ,GAE1C9R,QAAQC,IAAIiS,GACZA,EAAOyB,SACP7B,GAAe,GAwDG8B,CACE,EACA1B,EACAJ,IATN,2BAiBA,qBAAKtU,UAAWf,EAAQmG,SAAxB,SACE,cAAC3B,EAAA,EAAD,CACEmJ,aAAW,aACXlN,MAAM,UACNS,QAAQ,YACRuH,WAAW,EACXzE,QAAS,WACPkR,GACE,EADiB,UAEdtN,yBAFc,WAGjBR,EACAiO,EACAC,IAXN,iCAsBV,cAAC/S,EAAA,EAAD,CAAMiD,MAAI,EAAC4R,aAAa,SAAS3R,GAAI,GAArC,SACE,cAAC,GAAD,CACEuC,KAAMb,EACNsN,cAAeqC,MAInB,qBAAK/V,UAAWf,EAAQ8B,SAAxB,SACE,cAACwC,EAAA,EAAD,CAASpD,QAAQ,aAGnB,cAACD,EAAA,EAAD,CAAYyE,MAAM,OAAOjF,MAAM,UAAUkM,UAAU,KAAKzL,QAAQ,KAAhE,6BAIA,qBAAKH,UAAWf,EAAQ8B,SAAxB,SACE,cAACwC,EAAA,EAAD,CAASpD,QAAQ,aAGnB,eAACqB,EAAA,EAAD,CAAM8D,WAAS,EAACxE,QAAS,EAAGyE,MAAI,EAACzB,WAAW,SAA5C,UACE,cAACtC,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,cAACxE,EAAA,EAAD,CAAYyE,MAAM,SAASiH,UAAU,KAAKzL,QAAQ,KAAlD,sBAKF,cAACqB,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,qBAAK1E,UAAWf,EAAQgV,WAAxB,SACE,cAACqC,GAAA,EAAD,CACEvR,MAA+B,kBAAjBgR,EAA4BA,EAAe,EACzD3S,SAtGyB,SAACD,EAAOoT,GAC7CP,EAAgBO,IAsGJC,kBAAgB,eAChBC,IAAK,EACL7C,IAAK,SAKX,cAACpS,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,cAACxE,EAAA,EAAD,CAAYyE,MAAM,SAASiH,UAAU,KAAKzL,QAAQ,KAAlD,SACG4V,SAIP,qBAAK/V,UAAWf,EAAQ8B,SAAxB,SACE,qBAAKW,MAAO,CAAEuG,OAAQ,IAAK3H,MAAO,QAAlC,SACE,cAAC,KAAD,CACEiF,KAAMa,EACN8B,QAnIQ,CAClB,CAAEC,MAAO,KAAMC,WAAY,KAAM9H,MAAO,IACxC,CAAE6H,MAAO,SAAUC,WAAY,YAAa9H,MAAO,KACnD,CAAE6H,MAAO,cAAeC,WAAY,WAAY9H,MAAO,KACvD,CAAE6H,MAAO,iBAAkBC,WAAY,iBAAkB9H,MAAO,MAgItDiI,SAAU,GACVmO,UAAW,CAAC,CAAEvO,MAAO,KAAM8F,KAAM,qBChOzC7N,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEX6F,QAAS,CACP7F,QAAS,OACT8F,cAAe,UAEjBvE,QAAS,CACPwE,KAAM,YAERC,SAAU,CACRhG,QAAS,OACT0E,WAAY,SACZkF,YAAatL,EAAMoD,QAAQ,GAC3BmI,cAAevL,EAAMoD,QAAQ,IAE/BC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE3BoI,SAAU,CACRlI,OAAQtD,EAAMoD,QAAQ,GACtBqI,UAAW,cAqKAwN,GAjKA,SAAClZ,GACd,IAAMwB,EAAUmB,KADQ,GAEVzC,cACoBqI,IAAMC,SAASxI,EAAMmZ,cAH/B,mBAGjBC,EAHiB,KAGNC,EAHM,OAIQ9Q,IAAMC,SAAS,YAJvB,mBAIjB8Q,EAJiB,KAIPC,EAJO,OAKsBhR,IAAMC,UAAS,GALrC,mBAKjBgR,EALiB,KAKAC,EALA,KAMxB1U,QAAQC,IAAI,oBACZD,QAAQC,IAAIhF,EAAM+F,mBAElB,IAAM2T,EAAsB,SAAChU,EAAOiR,EAAK0C,EAAcC,GACrDG,GAAmB,GACnB1U,QAAQC,IAAIU,GAEK,KAAb4T,IACFA,EAAW,QAEbvU,QAAQC,IAAIsU,GACZpQ,KACGC,KAAK,UAAGC,0BAAkCuN,EAAK,CAC9C2C,SAAUA,EACV/M,WAAY7G,IAEb4D,MAAK,SAACC,GACLxE,QAAQC,IAAIuE,EAASC,MACP,iBAAV9D,IACF2T,GAAa,GACbtU,QAAQC,IAAIU,IAEA,gBAAVA,IACF2T,GAAa,GACbtU,QAAQC,IAAIU,IAEd+T,GAAmB,MAEpBhQ,OAAM,SAACrI,GACN2D,QAAQC,IAAI5D,GACZqY,GAAmB,OAgCzB,OACE,cAAC1I,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,qBAAKzO,UAAWf,EAAQ8B,SAAxB,SACE,cAACb,EAAA,EAAD,CAAY0L,UAAU,KAAKzL,QAAQ,KAAKT,MAAM,YAA9C,iCAIF,cAAC6D,EAAA,EAAD,CAASpD,QAAQ,WACjB,qBAAKH,UAAWf,EAAQiK,SAAxB,SACE,cAAChJ,EAAA,EAAD,CAAYC,QAAQ,YAAYT,MAAM,oBAGxC,eAAC8B,EAAA,EAAD,CAAM8D,WAAS,EAAC4C,SAAO,EAACpH,QAAS,EAAjC,UACE,cAACU,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,GAAf,SACE,cAAC2K,GAAA,EAAD,CACEpD,GAAG,iBACH9L,QAAQ,WACR4E,MAAOgS,EACP3T,SAvBiB,SAACD,GAC5B6T,EAAY7T,EAAMkJ,OAAOtH,QAuBf2C,WAAW,EACXF,SAAUqP,MAGd,cAACrV,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,UACiB,IAAdmS,EACC,cAACnK,GAAA,EAAD,CACEvI,MAAM,gJAGNyI,aAAW,SAJb,SAME,cAACnJ,EAAA,EAAD,CACEmJ,aAAW,SACXzM,QAAQ,YACRuH,WAAW,EACXF,SAAUyP,EACVhU,QAAS,WACPkU,EACE,eACA1Z,EAAM+F,kBAAoB,SAAW,gBACrCsT,EACAC,IAVN,sBAkBF,cAACtT,EAAA,EAAD,CACEmJ,aAAW,QACXzM,QAAQ,YACRuH,WAAW,EACXF,SAAUyP,EACVhU,QAAS,WACPkU,EACE,cACA1Z,EAAM+F,kBAAoB,SAAW,gBACrCsT,IATN,8BAkBJ,cAACtV,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,cAACgI,GAAA,EAAD,CACEvI,MAAM,mIAENyI,aAAW,SAHb,SAKE,cAACnJ,EAAA,EAAD,CACEmJ,aAAW,YACXzM,QAAQ,YACRuH,WAAW,EACXF,SAAUyP,EACVhU,QAAS,YA3GO,SAACE,EAAO4T,GACpCvU,QAAQC,IAAI,UAAGoE,yBAAH,aAA8CkQ,GAC1DvC,MAAM,UAAG3N,yBAAH,aAA8CkQ,EAAU,CAC5DtC,OAAQ,MACRnN,QAAS,CAAE,eAAgB,qBAE1BP,MAAK,SAACC,GAAD,OAAcA,EAASoQ,UAC5BrQ,MAAK,SAACqQ,GAEL,IAAMhD,EAAMrS,OAAOsV,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,KAC3CI,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOvD,EACZoD,EAAKI,aAAa,WAAYb,EAAW,QAGzCU,SAAS9C,KAAKkD,YAAYL,GAG1BA,EAAKM,QAGLN,EAAKO,WAAWC,YAAYR,MAuFlBS,CAAsB,EAAYlB,IANtC,mCCvLDmB,GAAcrR,yBAEdsR,GACDD,GADCC,GADgBtR,yBCSvBzG,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEX6F,QAAS,CACP7F,QAAS,OACT8F,cAAe,UAEjBvE,QAAS,CACPwE,KAAM,YAERC,SAAU,CACRhG,QAAS,OACT0E,WAAY,UAGdsU,kBAAmB,CACjBhZ,QAAS,OACTC,eAAgB,SAChByE,WAAY,SACZjD,QAAS,OACT0D,UAAW,OACX8E,UAAW,SAGbgP,WAAY,CACV/X,MAAO,OAGTS,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,QAgDdwX,GA5CE,SAAC7a,GAChB,IC1C8BuC,ED0CxBf,EAAUmB,KADU,EAEc6F,mBAAS,IAFvB,mBAEnBsS,EAFmB,KAELC,EAFK,KAGpBH,EAAa/F,aC5CWtS,ED4CkBuY,EC5CL,SAACpW,GAAW,IAC/CsW,EAAmBtW,EAAMlD,QAAzBwZ,eACFC,EAAiBvN,KAAEhB,SAASnK,GAElC,GAAIyY,GAAkBC,EAAgB,CACpC,IAAMC,EAAUF,EAAeC,GAC/B,OAAIC,GACFnW,QAAQC,IAAI,UAAWkW,GACjB,GAAN,OAAUT,IAAV,OAAwBS,IAEnB,GAET,MAAO,MDsCP,OACE,eAACnX,EAAA,EAAD,CAAM8D,WAAS,EAACC,MAAI,EAACzE,QAAS,EAA9B,UAC2B,gBAAxBrD,EAAMyP,cACL,cAAC1L,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CACEwD,QAASzK,EAAMyK,QACfzG,YAAahE,EAAMgE,YACnB0R,SAAU1V,EAAM0V,aAIpB,cAAC3R,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CACEuR,aAjBc,SAAClR,GACvByT,GAAqB,OAALzT,QAAK,IAALA,OAAA,EAAAA,EAAO4O,iBAAkB,SAoBvC,eAACnS,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,UACE,cAAC,GAAD,CACElB,kBAAmB/F,EAAM+F,kBACzBoT,YAAanZ,EAAMmZ,cAErB,cAACgC,GAAA,EAAD,CAAO5Y,UAAWf,EAAQ4Z,iBAA1B,SACE,cAACjQ,GAAA,EAAD,CAAK5I,UAAWf,EAAQmZ,kBAAxB,SACIC,EACA,qBAAMrY,UAAWf,EAAQoZ,WAAYvP,IAAKuP,EAAYtP,IAAMwP,IAC1DA,EAAY,uBAAmBA,GAAiB,c,mBE6FjDO,GA9JF,SAACrb,GAEZ,IAAMyU,EAAWC,cAFK,EAGcnM,IAAMC,SAAS,GAH7B,mBAGf8S,EAHe,KAGHC,EAHG,OAIoBhT,IAAMC,SAAS,gBAJnC,mBAIfiH,EAJe,KAIAS,EAJA,OAKwB3H,IAAMC,SAAS,MALvC,mBAKf+G,EALe,KAKEkB,EALF,OAMQlI,IAAMC,SAAS,IANvB,mBAMfiC,EANe,KAMN4F,EANM,OAOU9H,IAAMC,SAAS,IAPzB,mBAOfmH,EAPe,KAOLC,EAPK,OAQgBrH,IAAMC,UAAS,GAR/B,mBAQfxE,EARe,KAQFmM,EARE,OAS4B5H,IAAMC,UAAS,GAT3C,mBASfzC,EATe,KASIoG,EATJ,OAUgB5D,IAAMC,UAAS,GAV/B,mBAUf2Q,EAVe,aAWU5Q,IAAMC,SAAS,OAXzB,mBAWf6I,EAXe,KAWLV,EAXK,OAYMpI,IAAMC,SAAS,IAZrB,mBAYfT,EAZe,KAYP8I,EAZO,OAaYtI,IAAMC,SAAS,MAb3B,gCAcUD,IAAMC,SAAS,UAdzB,mBAcfkN,GAde,KAcL8F,GAdK,QAgBqBC,eAAnCC,GAhBc,GAgBdA,gBACA3G,IAjBc,GAgBG4G,cACK9G,aAAY,SAACnQ,GAAD,OAAWA,EAAMoQ,UAAnDC,mBACA6G,GAAiB/G,aAAY,SAACnQ,GAAD,OAAWA,EAAMmX,UAA9CD,aAQR,SAAS3L,GAAQzG,GAAO,IAAD,EAWrB,OAVIA,EAAKxB,MACPkI,EAAiB1G,EAAKxB,MAExBmI,EAAe3G,EAAK4G,WACpBC,EAAWC,OAAOC,KAAK/G,EAAKpB,iBAAiBoI,QAC7CC,EAAkB,UAACjH,EAAKvB,cAAN,aAAC,EAAa6I,eAChClB,EAAYpG,EAAKtB,WACjBiE,EAAqB3C,EAAKkH,WAC1BC,EAAYnH,EAAKoH,WAETpH,EAAKsS,WACX,IAAM,QACJN,GAAY,SACZ,MACF,IAAM,QACJA,GAAY,SACZ,MACF,QACEA,GAAY,SAGhBhS,EAAKpB,gBACH,oBAAqBoB,EACjB8G,OAAOC,KAAK/G,EAAKpB,iBAAiBoI,OAAO7G,KAAK,MAC9C,GAENkH,EAAUrH,GAGZ,IAAMuS,GAAY,SAACpN,GACboG,KACFpG,EAAEzE,iBACFyE,EAAEqN,YAAc,KAIdrG,GAAsBzH,uBAC1B,kBAAMuG,EAAS,CAAEvD,KAAMe,OACvB,CAACwC,IAGGwH,GAAsB/N,uBAC1B,kBAAMuG,EAAS,CAAEvD,KAAMsB,OACvB,CAACiC,IAIHzG,qBAAU,WACR,GAAI+G,GAGF,OAFAzQ,OAAO4X,iBAAiB,eAAgBH,IACxCzX,OAAO4X,iBAAiB,SAAUvG,IAC3B,WACLrR,OAAO6X,oBAAoB,eAAgBJ,IAC3CzX,OAAO6X,oBAAoB,SAAUxG,IACrCA,QAGH,CAACZ,KAEJ/G,qBAAU,WACJ4N,IACFF,GAAgBE,GAAc,CAAElZ,QAAS,cAE1C,CAACkZ,KAGJ5N,qBAAU,WACR9E,KAAMsE,IAAN,UAAapE,yBAAb,UAAoD,IAAIE,MAAK,SAACC,GAC5D0G,GAAQ1G,EAASC,MACjBzE,QAAQC,IAAIuE,EAASC,SAEvByS,OACC,CAACX,IAEJc,2BAAgB,WACdlT,KAAMsE,IAAN,UAAapE,yBAAb,UAAoD,IAAIE,MAAK,SAACC,GAC5D0G,GAAQ1G,EAASC,WAElB,IAEH,IAAMhI,GAAUmB,IAEhB,OACE,sBAAKJ,UAAWf,GAAQoB,KAAxB,UACE,cAACyZ,GAAA,EAAD,IACA,eAACtY,EAAA,EAAD,CAAM8D,WAAS,EAACyU,UAAU,SAASC,QAAQ,SAASlW,WAAW,SAA/D,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEV,SA/FR,SAAsBmT,GAChBwC,IAAexC,GACjByC,EAAczC,IA8FV9U,YAAaA,EACb+B,kBAAmBA,IAGrB,uBAAMxD,UAAWf,GAAQ0B,QAAzB,UACkB,IAAfoY,EACC,cAAC,GAAD,CACE7L,cAAeA,EACfE,SAAUA,EACVO,iBAAkBA,EAClBG,WAAYA,EACZI,mBAAoBA,EACpBb,YAAaA,EACbO,eAAgBA,EAChBnM,YAAaA,EACbmI,qBAAsBA,EACtBpG,kBAAmBA,EACnBgC,OAAQA,EACR8I,UAAWA,EACXtB,gBAAiBA,EACjB8B,SAAUA,EACVV,YAAaA,IAEb,KACY,IAAf2K,EACC,cAAC,GAAD,CACE7Q,QAASA,EACTgF,cAAeA,EACfzL,YAAaA,EACbmV,YAAaA,EACbpT,kBAAmBA,EACnBoG,qBAAsBA,EACtBqQ,WAAYzU,EAAOyU,WACnB9G,SAAUA,KAEV,e,kDC9JJ+G,I,YAMeC,IANzB,SAAUD,GAAeE,GAAzB,iEACE,OADF,SACQC,aAAI,CAAE1L,KAAMa,GAAoB0D,QAASkH,EAAOlH,UADxD,OAEE,OAFF,SAEQoH,aAAM,KAFd,OAGE,OAHF,SAGQD,aAAI,CAAE1L,KAAMa,GAAoB0D,QAAS,OAHjD,wCAMe,SAAUiH,KAAV,iEACb,OADa,SACPI,aAAUhL,GAAsB2K,IADzB,wC,kDCbFM,GAAb,oDACE,WAAYC,EAAWzT,GAAW,IAAD,+BAC/B,gBAEOG,OADW,MAAdsT,EACYzT,EAASG,OAET,yCAEhB,EAAKvC,KAAO,EAAK8V,YAAY9V,KAC7B,EAAK6V,UAAYA,EARc,EADnC,uBAAyCE,QCkE1BC,G,WAxDb,WAAYC,GAAW,qBAErBC,KAAKpG,YAASqG,EACdD,KAAKD,SAAWA,E,qLAQhBrY,QAAQC,IAAI,oB,kBAEO+R,MAAMsG,KAAKD,U,OAA5B7T,E,6DAEAxE,QAAQC,IAAR,MACM,IAAI+X,GAAoB,IAAK,CACjCrT,OAAQ,gC,WAGPH,EAASgU,G,uBACN,IAAIR,GAAoBxT,EAASK,OAAQ,CAC7CF,OAAQH,EAASiU,a,QAGrBzY,QAAQC,IAAI,kBACZqY,KAAKpG,OAAS1N,EAAS2N,KAAKC,Y,+PAIxBkG,KAAKpG,SACPoG,KAAKpG,OAAOyB,SACZ2E,KAAKpG,YAASqG,G,uLAIMG,G,2FAAY1K,E,+BAAe,EAAG2C,E,+BAAW,QAM/D3Q,QAAQC,IAAI,gBAAkB0Q,GACxBgI,EAAyB,UAAbhI,EAAuBiI,aAAeC,W,uBAExBP,KAAKpG,OAAOM,O,mBAAlCjQ,E,EAAAA,O,EAAOkQ,K,qDAEfqG,GAAMpJ,SAAS,CACbvD,KAAMuM,EACNhI,QAAS,CAAEqI,MAAO,IAAIJ,EAAUpW,EAAMyW,QAAShL,kB,8HCxD5CiL,QAAqBV,E,YCQtBW,I,YA0BeC,IA1BzB,SAAUD,GAAkBtB,GAA5B,2EAKI,OALJ,kBAEuCA,QAFvC,IAEuCA,OAFvC,EAEuCA,EAAQlH,QAAnC1C,EAFZ,EAEYA,aAAc2C,EAF1B,EAE0BA,SACtB3Q,QAAQC,IAAI2X,EAAOlH,SAHvB,SAKU0I,aAAK,CAACH,GAAoB,mBALpC,OAMI,OANJ,SAMUpB,aAAI,CAAE1L,KAAMgB,GAAyBuD,SAAS,IANxD,OAOI,OAPJ,SAOU0I,aACJ,CAACH,GAAoB,qBACrB3L,GACAU,EACA2C,GAXN,4DAcI3Q,QAAQqZ,MAAR,QACI,gBAAarB,IAfrB,iBAgBM,OAhBN,UAgBYH,aAAI,CAAE1L,KAAMY,GAAsB2D,QAAS,KAAE/L,SAhBzD,gCAkBM,OAlBN,UAkBYkT,aAAI,CACR1L,KAAMY,GACN2D,QAAS,+BApBjB,uDA0Be,SAAUyI,KAAV,iEACb,OADa,SACPG,aAAWrM,GAA0BiM,IAD9B,wC,gBChCLK,I,YASeC,IATzB,SAAUD,GAAiB3B,GAA3B,iEAEI,OAFJ,kBAEUwB,aAAK,CAACH,GAAoB,kBAFpC,OAGI,OAHJ,SAGUpB,aAAI,CAAE1L,KAAMgB,GAAyBuD,SAAS,IAHxD,uDAKI1Q,QAAQqZ,MAAR,MALJ,sDASe,SAAUG,KAAV,iEACb,OADa,SACPF,aAAWpM,GAAyBqM,IAD7B,wC,gBCTUE,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,aAAI,CACRC,aAAKR,IACLQ,aAAKH,MAHM,wC,gBCELI,I,YAkDeC,IAlDzB,SAAUD,GAA+BhC,GAAzC,iGAMqD,OANrD,WAEoCA,EAAOlH,QAA/BqI,EAFZ,EAEYA,MAAO/K,EAFnB,EAEmBA,aACT8L,EAAef,GAASA,EAAM3K,QAAW,EAC3C2L,EAA0B,GAJlC,SAM2DC,cACrD,SAACra,GAAD,OAAWA,EAAMoO,cAPvB,OAS2C,OAT3C,SAMYmC,EANZ,EAMYA,iBAAkB+J,EAN9B,EAM8BA,mBAN9B,UASiDD,cAC3C,SAACra,GAAD,OAAWA,EAAMoQ,UAVvB,QAeI,GAfJ,SASYE,EATZ,EASYA,2BAGRjQ,QAAQC,IAAI,SAAU6Z,EAAW,IAG7BA,GAAe9L,EACjB+L,EAAuB,aAAOhB,QACzB,GAAI7I,EAAiB9B,QAAUJ,EAIpC,IAFA+L,EAAuB,aAAO7J,GAFoB,EAGtB,CAAC,EAAGA,EAAiB9B,OAAQ,GAApD8L,EAH6C,KAGvCC,EAHuC,KAGhCC,EAHgC,KAI3CF,EAAOC,GACRA,EAAQD,EAAOJ,EACjBC,EAAwBG,GAAQhK,EAAiBgK,EAAOJ,IAExDC,EAAwBG,GAAQnB,EAAMqB,GACtCA,KAEFF,SAGFH,EAAuB,uBAAO7J,GAAP,aAA4B6I,IAGrD,OAlCJ,UAkCUlB,aAAI,CACR1L,KAAMoB,GACNmD,QAASqJ,IApCf,YAuCQ9J,EAvCR,iBAwCM,OAxCN,UAwCY4H,aAAI,CACR1L,KAAMqB,GACNkD,QAAQ,GAAD,oBAAMuJ,GAAN,aAA6BlB,MA1C5C,0DA8CI/Y,QAAQqZ,MAAR,MA9CJ,uDAkDe,SAAUQ,KAAV,iEACb,OADa,SACPP,aAAWhM,GAA4BsM,IADhC,wC,gBCrDUS,IAAV,SAAUA,KAAV,iEACb,OADa,SACPX,aAAI,CACRC,aAAKE,MAFM,wCCDf,IAyEeS,GAzEI,CAEjBC,gBAAiB,KACjBC,WAAY,gBAGZC,KANiB,SAMZC,GACHvW,KAAMwW,SAASD,QAAUA,GAI3BE,oBAXiB,WAYftC,KAAKiC,gBAAkBpW,KAAM0W,aAAarW,SAASsW,KAAI,SAACtW,GAAD,OAAcA,IAA9C,+BAAAgE,EAAA,MACrB,WAAOnM,GAAP,SAAAmM,EAAA,yDAC+B,MAAzBnM,EAAM0I,QAAQF,OADpB,oBAEQxI,EAAM2G,OAAO4O,IAAImJ,SAAS,QAFlC,sBAIY1e,EAJZ,aAUQA,EAVR,2CADqB,wDAgBzB2e,sBA5BiB,WA8Bf7W,KAAM0W,aAAarW,SAASyW,MAAM3C,KAAKiC,kBAGzCW,oBAjCiB,SAiCG5J,GAClBnN,KAAMwW,SAAS7V,QAAQqW,OAAOC,cAAgB9J,GAGhD+J,eArCiB,SAqCFlP,GACbhI,KAAMwW,SAAS7V,QAAQwW,YAAcnP,GAGvCoP,aAzCiB,WA0CfpX,KAAMwW,SAAS7V,QAAQqW,OAAS,IAGlC1S,IA7CiB,SA6Cb+S,GACF,OAAOrX,KAAMsE,IAAI+S,IAGnBpX,KAjDiB,SAiDZoX,EAAU/W,GACb,OAAON,KAAMC,KAAKoX,EAAU/W,IAG9BoT,IArDiB,SAqDb2D,EAAU/W,GACZ,OAAON,KAAM0T,IAAI2D,EAAU/W,IAG7BgX,OAzDiB,SAyDVD,GACL,OAAOrX,KAAMsX,OAAOD,IAGtBE,cA7DiB,SA6DHjX,GACZ,OAAON,KAAMM,IAGfkX,kBAjEiB,SAiEClX,GAGhB,OAFA6T,KAAKsD,gBACLtD,KAAK+C,eAAe,oBACblX,KAAMM,K,YC5DPoX,I,YAYelE,IAZzB,SAAUkE,KAAV,yEACkB,OADlB,SACwBvB,GAAW7R,IAAI,oBADvC,OAEE,OADMqT,EADR,gBAEQ9b,QAAQC,IAAI,yBAFpB,UAGO0I,KAAEC,QAAQkT,EAAQrX,MAHzB,iBAIoB,OAJpB,SAI0BkE,KAAEoT,OAAOD,EAAQrX,MAAM,SAACuX,EAAKhT,GAEjD,OADAgT,EAAIhT,EAAG5G,MAAQ4G,EAAGiT,IACXD,IACN,CAAC,KAPR,OAQI,OAJMtL,EAJV,iBAQUmH,aAAI,CAAE1L,KAAMuB,GAAsBgD,YAR5C,yCAYe,SAAUiH,KAAV,iEACb,OADa,SACPI,aAAUtK,GAAwBoO,IAD3B,wC,gBChBUK,IAAV,SAAUA,KAAV,iEACb,OADa,SACPxC,aAAI,CACRC,aAAKF,IACLE,aAAKhC,IACLgC,aAAKU,IACLV,aAAKwC,MALM,wCCHf,IAAMC,GAAe,CACnBC,cAAc,GAID,SAASC,KAAwC,IAA/B3c,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAC7D,OAAQA,EAAOzL,MACb,KAAKW,GACH,OAAO,2BACFnN,GADL,IAEE0c,aAAczE,EAAOlH,UAAW,IAEpC,QACE,OAAO/Q,GCfb,IAAMyc,GAAe,CACnBvF,aAAc,MAGD,SAASyF,KAAwC,IAA/B3c,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAC7D,OAAQA,EAAOzL,MACb,KAAKa,GACH,OAAO,2BACFrN,GADL,IAEEkX,aAAce,EAAOlH,UAEzB,QACE,OAAO/Q,GCZb,IAAMyc,GAAe,CACnBpM,mBAAmB,EACnBC,4BAA4B,GAGf,SAASsM,KAA0C,IAA/B5c,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAC/D,OAAQA,EAAOzL,MACb,KAAKgB,GACH,OAAO,2BACFxN,GADL,IAEEqQ,kBAAmB4H,EAAOlH,UAE9B,KAAKtD,GACH,OAAO,2BACFzN,GADL,IAEEsQ,2BAA4B2H,EAAOlH,UAEvC,QACE,OAAO/Q,GCdb,IAAMyc,GAAe,CACnBxc,aAAc,IAAIiZ,WAClBoB,mBAAoB,IAAIpB,YAGX,SAAS9K,KAA0C,IAA/BpO,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAC/D,OAAQA,EAAOzL,MACb,KAAKkB,GACH,OAAO,2BACF1N,GADL,IAEEuQ,iBAAkB,IAAI2I,WACtBoB,mBAAoB,IAAIpB,aAE5B,KAAKtL,GACH,OAAO,2BACF5N,GADL,IAEEuQ,iBAAiB,aAAK0H,EAAOlH,WAEjC,KAAKlD,GACH,OAAO,2BACF7N,GADL,IAEEsa,mBAAmB,aAAKrC,EAAOlH,WAEnC,QACE,OAAO/Q,GC5Bb,IAAMyc,GAAe,CACnBnG,eAAgB,IAGH,SAASuG,KAA2C,IAA/B7c,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAChE,OAAQA,EAAOzL,MACb,KAAKuB,GACH,OAAO,2BACF/N,GADL,IAEEsW,eAAgB2B,EAAOlH,UAE3B,QACE,OAAO/Q,GCRb,IAAMyc,GAAe,CACjBxc,aAAc,GACdE,aAAc,GACdC,iBAAiB,GAGN,SAASF,KAA2C,IAA/BF,EAA8B,uDAAtByc,GAAcxE,EAAQ,uCAC9D,OAAQA,EAAOzL,MACX,KAAKwB,GACD,OAAO,2BACAhO,GADP,IAEIG,aAAc8X,EAAOlH,UAE7B,KAAK7C,GACD,OAAO,2BACAlO,GADP,IAEII,gBAAiBJ,EAAMC,aAAeD,EAAMG,eAEpD,KAAK8N,GACD,OAAO,2BACAjO,GADP,IAEIC,aAAcgY,EAAOlH,UAE7B,QACI,OAAO/Q,GCrBnB,IASe8c,GATU,kBAAMC,2BAAgB,CAC7C7e,KAAMye,GACNxF,UACA/G,OAAQwM,GACRxO,cACAlO,eACApD,QAAS+f,MCPLG,GAAiBC,eAGjBC,GAAa,CACjBF,IAGIG,GAAoBC,uBAAmB,WAAnB,GACxBC,mBAAe,WAAf,EAAmBH,KADK,OANR,KAWZI,GAAaR,KAEb3D,GAAQoE,uBACZD,GACAH,IAGFH,GAAeQ,IAAIjB,IAEJpD,UCffwB,GAAWG,KAAK9E,IjBRdsD,GAAqB,IAAIb,GAAJ,UAAoBzC,GAApB,WiBYvB,IA0BeyH,GA1BH,SAACniB,GAST,OARAgO,qBAAU,YACa,uCAAG,sBAAAT,EAAA,sEACZvN,EAAMoiB,aAAaC,cADP,2CAAH,qDAInBC,KAED,IAEC,cAAC,EAAD,UACI,cAAC,IAAD,CAAUzE,MAAOA,GAAjB,SACI,cAAC,KAAD,CACI0E,aAAc,CACVC,WAAY,QACZC,SAAU,OAEdC,iBAAkB,IALtB,SAOI,cAAC,GAAD,WC9BdN,GAAe,ICDrB,WACI,WAAY3C,EAASkD,GAAW,qBAC5BtF,KAAKuF,QAAUnD,EACfpC,KAAKwF,SAAWF,EAChBtF,KAAK1Y,aAAe,GACpB0Y,KAAKxY,aAAe,GACpBwY,KAAKvY,iBAAkB,EAN/B,0MAakCoE,KAAMsE,IAAN,UAAa6P,KAAKuF,QAAlB,YAblC,OAaYE,EAbZ,6DAeY/d,QAAQC,IAAR,MACM,IAAI+X,GAAoB,IAAK,CAC/BrT,OAAQ,gCAjBxB,WAoByC,OAA7BoZ,EAActF,WApB1B,uBAqBkB,IAAIT,GAAoBxT,EAASK,OAAQ,CAC3CF,OAAQoZ,EAActF,aAtBtC,eAyBQH,KAAK1Y,aAAeme,EAActZ,KAClCqU,GAAMpJ,SAAS,CAACvD,KAAMyB,GAAsB8C,QAASqN,EAActZ,OA1B3E,UA6BgBmN,EA7BhB,UA6ByB0G,KAAKwF,SA7B9B,kCA8B6B3Z,KAAMsE,IAAImJ,EAAK,CAC5B9M,QAAS,CAAC,eAAgB,sBA/B1C,QA8BYN,EA9BZ,iEAkCYxE,QAAQC,IAAR,MAlCZ,8BAqCoC,OAAxBuE,EAASiU,WArCrB,oDAwCYuF,EAAYxZ,EAASC,MACZwZ,+BACT3F,KAAKxY,aAAeke,EAAUC,6BAC9BnF,GAAMpJ,SAAS,CAACvD,KAAMwB,GAAsB+C,QAASsN,EAAUC,+BAC/DnF,GAAMpJ,SAAS,CAACvD,KAAM0B,GAAkB6C,QAAU4H,KAAK1Y,aAAe0Y,KAAKxY,gBA5CvF,8HDCqB,CAAiB6V,GAAmBA,IAEzDuI,IAASC,OACP,cAAC,GAAD,CAAKd,aAAcA,KACnBpI,SAASmJ,eAAe,W","file":"static/js/main.cf78b67e.chunk.js","sourcesContent":["import React from \"react\";\nimport { blueGrey, deepOrange, lightBlue, red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, MuiThemeProvider, useTheme, } from \"@material-ui/core/styles\";\n\nconst LightTheme = (props) => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800]),\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500]),\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600]),\n      },\n      secondaryRed: {\n        light: red[600],\n        main: red[700],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[600]),\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600]),\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n      record: {\n        light: red[900],\n        main: red[900],\n        dark: red[900],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import { AppBar, Button, Toolbar, Typography, Divider } from \"@material-ui/core\";\nimport { Update } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\n\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import {Button, Grid, Link, Typography} from \"@material-ui/core\";\nimport {green, grey} from '@material-ui/core/colors';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport {Update} from \"@material-ui/icons\";\nimport {connect} from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n\n    section1: {\n        margin: theme.spacing(2, 1),\n    },\n    update_available_button: {\n        color: 'primary',\n        borderColor: 'primary',\n        variant: 'outlined',\n    },\n    no_update_available_button: {\n        visibility: `hidden`\n    },\n}));\n\nconst InconSelector = (props) => {\n    switch (props.index) {\n        case 0:\n            return <HomeIcon/>;\n        case 1:\n            return <AssessmentIcon/>;\n        default:\n            return <InboxIcon/>;\n    }\n};\n\nconst Connected = (props) => {\n    return (\n        <Grid>\n            {props.isConnected ? (\n                <Typography> <FiberManualRecordIcon\n                    style={{fontSize: 16, color: green[500]}}></FiberManualRecordIcon> Connected </Typography>\n\n            ) : (\n                <Typography> <FiberManualRecordIcon\n                    style={{fontSize: 16, color: grey[500]}}> </FiberManualRecordIcon> Not Connected </Typography>\n            )}\n        </Grid>\n    );\n};\n\nconst localprops = {\n    localVersion: \"\",\n    cloudVersion: \"\",\n    updateAvailable: false,\n};\n\nconst mapStateToProps = (state) => ({\n    localVersion: state.versionData.localVersion,\n    cloudVersion: state.versionData.cloudVersion,\n    updateAvailable: state.versionData.updateAvailable,\n});\n\nfunction updateClicked(){\n    window.open('https://github.com/sensiml/open-gateway/releases', '_blank');\n}\n\nconst NavBar = (props) => {\n    const classes = useStyles();\n    console.log(props);\n\n    const handleMenu = (viewId) => (event) => {\n        props.onChange(viewId);\n    };\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar/>\n            <div className={classes.drawerContainer}>\n                <List>\n                    {[\"Home\", \"Test Mode\"].map((text, index) => (\n                        <ListItem button key={text} onClick={handleMenu(index)}>\n                            <ListItemIcon>\n                                <InconSelector index={index}> </InconSelector>\n                            </ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    ))}\n                    <div className={classes.section1}>\n                        <Divider></Divider>\n                    </div>\n                    <ListItem>\n                        <Typography color='primary'>Device Status</Typography>\n                    </ListItem>\n                    <ListItem>\n                        <Connected\n                            text=\"Device\"\n                            isConnected={props.isConnected}\n                        ></Connected>\n                    </ListItem>\n                    <ListItem>\n                        <Typography color='primary'>Video Status</Typography>\n                    </ListItem>\n                    <ListItem>\n                        <Connected\n                            text=\"Video\"\n                            isConnected={props.isCameraConnected}\n                        ></Connected>\n                    </ListItem>\n                    <ListItem>\n                        <Typography color='primary'>Version</Typography>\n                    </ListItem>\n                    <ListItem>\n                        <Typography color='black'>{props.localVersion}</Typography>\n                    </ListItem>\n                    <ListItem><Button\n                         aria-multiline={true} startIcon={<Update/>} onClick={updateClicked}\n                                className={props.updateAvailable ? classes.update_available_button : classes.no_update_available_button}>Update\n                        Available: {props.cloudVersion}</Button>\n                    </ListItem>\n                </List>\n\n            </div>\n        </Drawer>\n    );\n};\nconst nb = connect(mapStateToProps)(NavBar)\nexport default nb;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 5, 5, 35),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import { Grid } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Typography align=\"center\" className={classes.title} color=\"textPrimary\">\n        {props.name}\n      </Typography>\n      {props.list ? (\n        <div className={classes.bullet}>\n          <List dense={true}>\n            {props.value.split(\",\").map((value) => (\n              <ListItem>\n                <ListItemText align=\"center\" primary={value} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ) : (\n        <Typography\n          align=\"center\"\n          className={classes.pos}\n          color=\"textSecondary\"\n        >\n          {props.value}\n        </Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { SimpleCard } from \"../SimpleCard\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 2, 0),\n  },\n}));\n\nconst Status = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Grid container rows spacing={4}>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard name=\"Mode\" xs=\"6\" value={props.config.mode}></SimpleCard>\n        <SimpleCard\n          name=\"Source\"\n          xs=\"6\"\n          value={props.config.source}\n        ></SimpleCard>\n      </Grid>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard\n          name=\"Device ID\"\n          xs={6}\n          value={props.config.device_id}\n        ></SimpleCard>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            xs=\"6\"\n            name=\"Sample Rate\"\n            value={props.config.sample_rate}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n      <Grid item xs={12}>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            name=\"Sensor Columns\"\n            value={props.config.column_location}\n            list={true}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DialogContentText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(1, 1),\n  },\n}));\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scanning, setIsScanning] = React.useState(false);\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const classes = useStyles();\n  const [scanningText, setScanningText] = React.useState(\"Scanning\");\n\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ];\n\n  const handleClickOpen = (event) => {\n    setDeviceRows([]);\n    setOpen(true);\n    event.preventDefault();\n    handleDeviceScan();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDeviceScan = () => {\n    setScanningText(\"Scanning for \" + props.source + \" Devices....\");\n    setIsScanning(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: props.source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIsScanning(false);\n        setDeviceRows(response.data);\n        setScanningText(\"Scanning complete\");\n      })\n      .catch(function (error) {\n        setIsScanning(false);\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={props.configuring}\n        fullWidth={true}\n        onClick={handleClickOpen}\n        className={classes.button}\n      >\n        Scan for {props.source} Devices\n      </Button>\n      <Dialog open={open} onClose={handleClose} fullWidth=\"sm\" maxWidth=\"sm\">\n        <DialogContent>\n          <DialogContentText>{scanningText}</DialogContentText>\n\n          <div style={{ height: 600, width: \"100%\" }}>\n            <DataGrid\n              rows={deviceRows}\n              columns={deviceColumns}\n              onRowSelected={props.handleRowSelection}\n              pageSize={10}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            select\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n} from \"@material-ui/core\";\n\n\nconst Camera = ({ cameraKey, classes, isCameraConnected }) => {\n  return (\n    <Box className={classes.cameraViewWrapper}>\n    { isCameraConnected ?\n      <img\n        src={`http://localhost:5555/stream-video?${cameraKey}`}\n        alt=\"Camera\"\n      />\n      : \"Video Source is not connected\"\n    }\n    </Box>\n  );\n};\n\nexport default Camera;\n","import _ from \"lodash\";\nimport React, { useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  Tooltip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  FormHelperText,\n  IconButton,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Camera from \"./Camera\";\n\nconst SOURCE_SCREEN_INDEX = -1;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 3, 0),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 800,\n    minHeight: 800,\n  },\n  selectWrapper: {\n    height: \"3.25rem\",\n  },\n  selectSource: {\n    width: \"100%\",\n  },\n  selectLoading: {\n    lineHeight: 3.25,\n  },\n  cameraViewWrapper: {\n    minHeight: \"480px\",\n    minWidth: \"640px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }\n}));\n\nconst handleCameraRequest = (\n  event,\n  setCameraView,\n  setIsCameraConnected,\n  setCameraKey,\n  indexSource,\n) => {\n  console.log(event);\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}config-video`, {\n      camera_index: indexSource,\n      event_type: event,\n    })\n    .then((response) => {\n      console.log(response.data);\n      if (event === \"camera-on\") {\n        setCameraView(true);\n        setIsCameraConnected(true);\n        setCameraKey(Math.random().toString(36).substring(7));\n        console.log(\"caera event\");\n        console.log(event);\n      }\n      if (event === \"camera-off\") {\n        setCameraView(false);\n        setIsCameraConnected(false);\n        console.log(\"caera event\");\n        console.log(event);\n      }\n    });\n};\n\nconst WebCamera = (props) => {\n  const classes = useStyles();\n  const [cameraView, setCameraView] = React.useState(false);\n  const [cameraKey, setCameraKey] = React.useState(\"\");\n  const [videoSourceList, setVideoSourceList] = React.useState([]);\n  const [videoSource, setVideoSource] = React.useState(SOURCE_SCREEN_INDEX - 1);\n  const [videoSourceLoading, setVideoSourceLoading] = React.useState(false);\n  const [videoSourceLoadError, setVideoSourceLoadError] = React.useState(\"\");\n\n  const loadVideoSource = async () => {\n    setVideoSourceLoadError(\"\");\n    setVideoSourceLoading(true);\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}scan-video`, {})\n      const { video_sources } = response.data;\n      if (!_.isEmpty(video_sources) && _.isArray(video_sources)) {\n        const mainSource = video_sources.find(el => el.index === 0);\n        setVideoSourceList(video_sources);\n        setVideoSource(mainSource.index);\n      }\n    } catch (e) {\n      setVideoSourceLoadError(\"Failed to load video sources, please, try again\");\n    }\n    setVideoSourceLoading(false);\n  };\n\n  useEffect(() => {\n    loadVideoSource();\n  }, []);\n\n  const getVideoSourceName = useCallback(() => {\n    // useCallback\n    const name = \"Camera\";\n    if (!_.isEmpty(videoSourceList) && _.isArray(videoSourceList)) {\n      return videoSourceList.find(el => el.index === videoSource)?.name || name;\n    }\n    return name;\n  }, [videoSource]);\n\n  const handleUpdateVideoSourceList = () => {\n    loadVideoSource();\n  };\n\n  const handleCameraSourceSelect = (e) => {\n    setVideoSource(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Video Source\n        </Typography>\n      </div>\n      <div className={classes.section1}>\n        <Divider variant=\"middle\" />\n      </div>\n\n      <Camera\n        classes={classes}\n        cameraKey={cameraKey}\n        isCameraConnected={props.isCameraConnected}\n      ></Camera>\n      <div className={classes.section2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n      </div>\n\n      <div className={classes.details}>\n        <Grid container rows spacing={2}>\n          <Grid item xs={12}>\n            <Box className={classes.selectWrapper} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n              {videoSourceLoadError\n                ? <Typography color=\"error\"> {videoSourceLoadError} </Typography>\n                : videoSourceLoading\n                  ? <Box className={classes.selectLoading}>{\"Loading...\"}</Box>\n                  : <>\n                    <FormControl className={classes.selectSource} variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"video_sources_select_label\">Video Source</InputLabel>\n                      <Select\n                        labelId=\"video_sources_select_label\"\n                        id=\"video_sources_select\"\n                        value={videoSource}\n                        onChange={handleCameraSourceSelect}\n                        label=\"Video source\"\n                        disabled={props.isCameraConnected !== false}\n                      >\n                        {videoSourceList.map(sourceCam =>\n                          <MenuItem value={sourceCam.index} key={`source_select_${sourceCam.index}`}>\n                            {sourceCam.name}\n                          </MenuItem>\n                        )}\n                      </Select>\n                      {props.isCameraConnected !== false\n                        ? <FormHelperText id=\"my-helper-text\">To change souce, first disconnect {getVideoSourceName()}</FormHelperText>\n                        : null\n                      }\n                    </FormControl>\n                    <Tooltip title=\"Reload video sources\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"large\"\n                        color=\"primary\"\n                        disabled={props.isCameraConnected !== false}\n                        onClick={handleUpdateVideoSourceList}\n                      >\n                        <CachedIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                  </>\n              }\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            {props.isCameraConnected === false ? (\n              <Button\n                aria-label=\"Start Camera\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth={true}\n                disabled={Boolean(videoSource < SOURCE_SCREEN_INDEX)}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-on\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource,\n                  );\n                }}\n              >\n                Connect to {getVideoSourceName()}\n              </Button>\n            ) : (\n              <Button\n                aria-label=\"Stop Camera\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth={true}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-off\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource,\n                  );\n                }}\n              >\n                Disconnect {getVideoSourceName()}\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WebCamera;\n","import { Grid, Typography, Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { Status } from \"../Status\";\nimport Scan from \"./Scan\";\nimport { WebCamera } from \"../WebCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 700,\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 1, 0),\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(\n    props.streamingSource ? props.streamingSource : \"SERIAL\"\n  );\n\n  const [mode, setMode] = React.useState(\n    props.streamingMode === \"recognition\" ? \"RECOGNITION\" : \"DATA_CAPTURE\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n\n  const [helperText, setHelperText] = React.useState(\"\");\n\n  const [configuring, setIsConfiguring] = React.useState(false);\n\n\n  const handleRadioChange = (event) => {\n    console.log(\"handle radio\");\n    setSource(event.target.value);\n  };\n\n  const handleDeviceBaudRate = (event) => {\n    console.log(\"handle radio\");\n    props.setBaudRate(event.target.value);\n  };\n\n\n  const handleModeChange = (event) => {\n    console.log(\"handle mode\");\n    setMode(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    console.log(\"handle device id\");\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    setIsConfiguring(true);\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      setIsConfiguring(false);\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    let data = {\n      device_id: deviceID,\n      source: source.toLowerCase(),\n      mode: mode,\n    }\n    if (source === 'SERIAL') {\n      data.baud_rate = props.baudRate\n    }\n    axios\n      .post(`${process.env.REACT_APP_API_URL}config`, data)\n      .then((response) => {\n        mapdata(response.data);\n        if (response.data.streaming == false) {\n          setHelperText(\"Error starting device, check the logs in the terminal for details for additional details\");\n        }\n        else {\n          setHelperText(\"Device Connected\");\n        }\n        setIsConfiguring(false);\n      })\n      .catch(function (error) {\n        setIsConfiguring(false);\n        if (error.response) {\n          setHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n          setHelperText(error.response.data.detail.join(\", \"));\n        }\n      });\n  };\n\n  const handleDisconnectRequest = (event) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      mapdata(res.data);\n    });\n  };\n\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    props.setIsCameraConnected(data.camera_on);\n    props.setBaudRate(data.baud_rate);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    props.setConfig(data);\n  }\n\n\n  useEffect(() => {\n    setDeviceID(props.deviceID);\n    setSource(props.streamingSource);\n    setMode(props.streamingMode.toUpperCase());\n  }, [props.deviceID, props.streamingMode])\n\n  return (\n    <Grid container columns>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <div className={classes.section1}>\n              <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n                Device Source\n              </Typography>\n            </div>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n            {props.isConnected ? (\n              <React.Fragment>\n                <Status\n                  setStreamingMode={props.setStreamingMode}\n                  setColumns={props.setColumns}\n                  setStreamingSource={props.setStreamingSource}\n                  setDeviceID={props.setDeviceID}\n                  setIsConnected={props.setIsConnected}\n                  isConnected={props.isConnected}\n                  setIsCameraConnected={props.setIsCameraConnected}\n                  isCameraConnected={props.isCameraConnected}\n                  config={props.config}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={configuring}\n                  fullWidth={true}\n                  className={classes.button}\n                  onClick={handleDisconnectRequest}\n                >\n                  Disconnect Device\n                </Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    disabled={configuring || props.isConnected}\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <div>\n                      <FormLabel component=\"legend\">Device Mode:</FormLabel>\n                      <RadioGroup\n                        aria-label=\"mode\"\n                        name=\"Streaming Source\"\n                        value={mode}\n                        onChange={handleModeChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"DATA_CAPTURE\"\n                          control={<Radio />}\n                          label=\"Data Capture\"\n                        />\n                        <FormControlLabel\n                          value=\"RECOGNITION\"\n                          control={<Radio />}\n                          label=\"Recognition\"\n                        />\n                      </RadioGroup>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <div>\n                      <FormLabel>Connection Type</FormLabel>\n                      <RadioGroup\n                        aria-label=\"source\"\n                        value={source}\n                        onChange={handleRadioChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"SERIAL\"\n                          control={<Radio />}\n                          label=\"Serial\"\n                        />\n                        <FormControlLabel\n                          value=\"BLE\"\n                          control={<Radio />}\n                          label=\"BLE\"\n                        />\n                        <FormControlLabel\n                          value=\"TCPIP\"\n                          control={<Radio />}\n                          label=\"TCP/IP\"\n                        />\n                        <FormControlLabel\n                          value=\"TEST\"\n                          control={<Radio />}\n                          label=\"Test\"\n                        />\n                      </RadioGroup>\n                    </div>\n\n                    <Scan\n                      source={source}\n                      handleRowSelection={handleRowSelection}\n                      configuring={configuring}\n                    />\n\n                    <div className={classes.section1}></div>\n\n                    <div>\n                      <FormLabel component=\"legend\">Device ID:</FormLabel>\n                      <TextField\n                        id=\"outlined-basic\"\n                        variant=\"outlined\"\n                        value={deviceID}\n                        onChange={handleDeviceIDChange}\n                        fullWidth={true}\n                      />\n                    </div>\n\n                    <div className={classes.section1}></div>\n\n                    {source === 'SERIAL' ?\n                      <div>\n                        <FormLabel component=\"legend\">Baud Rate:</FormLabel>\n                        <TextField\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          value={props.baudRate}\n                          onChange={handleDeviceBaudRate}\n                          fullWidth={true}\n                        />\n                      </div>\n                      : <div />}\n\n\n\n                    <div className={classes.section1}></div>\n                    <div>\n                      <Grid container columns spacing={2}>\n\n                        <Grid item xs={12}>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={configuring}\n                            fullWidth={true}\n                            className={classes.button}\n                          >\n                            Connect to Device\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <Typography> {helperText}</Typography>\n                  </FormControl>\n                </form>\n              </React.Fragment>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <WebCamera\n              setIsCameraConnected={props.setIsCameraConnected}\n              isCameraConnected={props.isCameraConnected}\n            />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid >\n  );\n};\n\nexport default Configure;\n","// root\nexport const SET_GLOBAL_LOADER = \"SET_GLOBAL_LOADER\";\n\n// errors\nexport const FETCH_DATA_ERROR_MSG = \"FETCH_DATA_ERROR_MSG\";\nexport const SET_DATA_ERROR_MSG = \"SET_DATA_ERROR_MSG\";\n\n// stream\nexport const START_STREAM_SENSOR_SAGA = \"START_STREAM_SENSOR_SAGA\";\nexport const STOP_STREAM_SENSOR_SAGA = \"STOP_STREAM_SENSOR_SAGA\";\nexport const SWITCH_STREAM_SENSOR_RECORD_SAGA =\n  \"SWITCH_STREAM_SENSOR_RECORD_SAGA\";\nexport const SET_IS_STREAMING_SENSOR = \"SET_IS_STREAMING_SENSOR\";\nexport const SET_IS_STREAMING_SENSOR_RECORDING =\n  \"SET_IS_STREAMING_SENSOR_RECORDING\";\nexport const SET_STREAM_SENSOR_DATA_RESET = \"SET_STREAM_SENSOR_DATA_RESET\";\n\n// sensor data\nexport const SET_CHUNK_SENSOR_DATA_SAGA = \"SET_CHUNK_SENSOR_DATA_SAGA\";\nexport const SET_STREAM_SENSOR_DATA = \"SET_STREAM_SENSOR_DATA\";\nexport const SET_STREAM_SENSOR_RECORD_DATA = \"SET_STREAM_SENSOR_RECORD_DATA\";\n\n// classes data\n\nexport const FETCH_CLASS_MAP_IMAGES = \"FETCH_CLASS_MAP_IMAGES\";\nexport const SET_CLASS_MAP_IMAGES = \"SET_CLASS_MAP_IMAGES\";\n\nexport const UPDATE_CLOUD_VERSION = \"UPDATE_CLOUD_VERSION\";\nexport const UPDATE_LOCAL_VERSION = \"UPDATE_LOCAL_VERSION\";\nexport const UPDATE_AVAILABLE = \"UPDATE_AVAILABLE\";\n","import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst SensorDataChart = (props) => {\n  const { sensorData, countSamples, title } = props;\n  const [revision, setRevision] = useState(0);\n  const [opacity, setOpacity] = useState(\"1\");\n\n  useEffect(() => {\n    setRevision(revision + 1);\n    if (sensorData && sensorData.length) {\n      if (sensorData[0].x && sensorData[0].x.length) {\n      }\n    }\n  }, [sensorData]);\n\n  return (\n    <Plot\n      data={sensorData}\n      revision={revision}\n      style={{ width: \"100%\", height: \"100%\", opacity }}\n      layout={{\n        title,\n        visible: false,\n        autosize: true,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4,\n        },\n        xaxis: {\n          autorange: true,\n        },\n        yaxis: {\n          autorange: true,\n        },\n      }}\n    />\n  );\n};\n\nexport default SensorDataChart;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  SET_STREAM_SENSOR_DATA_RESET,\n  START_STREAM_SENSOR_SAGA,\n  STOP_STREAM_SENSOR_SAGA,\n} from \"../../redux/actions/actionTypes\";\nimport {\n  sensorDataForChart,\n  sensorRecordedDataToCsv,\n} from \"../../redux/selectors/sensorData\";\nimport SensorDataChart from \"./SensorDataChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardWrapper: {\n    padding: theme.spacing(2),\n  },\n  dataWrapper: {\n    padding: theme.spacing(2),\n  },\n  chartWrapper: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  zeroOpacity: {\n    opacity: \"0\",\n  },\n}));\n\nconst SensorStream = (props) => {\n  const COUNT_SAMPLES = 1000;\n  const { columns } = props;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isSplitCharts, SetIsSplitCharts] = useState(false);\n  const { isStreamingSensor, isStreamingSensorRecording } = useSelector(\n    (state) => state.stream\n  );\n  const sensorData = useSelector(sensorDataForChart(columns));\n\n  const startSensorStreaming = useCallback(\n    // max array is COUNT_SAMPLES * count of data types\n    () =>\n      dispatch({\n        type: START_STREAM_SENSOR_SAGA,\n        payload: {\n          countSamples: COUNT_SAMPLES * ((columns && columns?.length) || 1),\n          dataType: props.dataType\n        },\n      }),\n    [dispatch]\n  );\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const setClearStream = useCallback(\n    () => dispatch({ type: SET_STREAM_SENSOR_DATA_RESET, payload: [] }),\n    [dispatch]\n  );\n\n  const switchSplitChart = () => {\n    SetIsSplitCharts(!isSplitCharts);\n  };\n\n  const manageStream = () => {\n    console.log(\"streaming\", isStreamingSensor);\n    if (isStreamingSensor) {\n      stopSensorStreaming();\n    } else {\n      setClearStream();\n      startSensorStreaming();\n    }\n  };\n\n  useEffect(() => {\n    if (!props.isConnected && isStreamingSensor) {\n      stopSensorStreaming();\n      setClearStream();\n    }\n\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Test Mode: Data Capture\n        </Typography>\n        <Box className={classes.dataWrapper}>\n          <Box className={classes.chartWrapper}>\n            <Box className={!isStreamingSensor && classes.zeroOpacity}>\n              <Switch\n                checked={isSplitCharts}\n                onChange={() => switchSplitChart()}\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />{\" \"}\n              Split charts\n            </Box>\n            {sensorData && sensorData.length && isSplitCharts ? (\n              sensorData.map((data) => (\n                <SensorDataChart\n                  title={data.name}\n                  countSamples={COUNT_SAMPLES}\n                  sensorData={[data]}\n                  isStreamingSensor={isStreamingSensor}\n                />\n              ))\n            ) : (\n              <SensorDataChart\n                countSamples={COUNT_SAMPLES}\n                sensorData={sensorData}\n                isStreamingSensor={isStreamingSensor}\n              />\n            )}\n          </Box>\n          <Box className={classes.buttonWrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => manageStream()}\n            >\n              {isStreamingSensor ? \"Stop\" : \"View\"}\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SensorStream;\n","export const sensorDataForChart = column => (state) => {\n  const { sensorSimpleData } = state.sensorData;\n  // generate chart zero array\n  const result = column.map(name => {\n    return {\n      x: [],\n      y: [],\n      type: 'scatter',\n      mode: 'lines',\n      name,\n    };\n  });\n  // fill result array\n  sensorSimpleData.forEach((el, i) => {\n    result[i % column.length].x.push(Math.floor(i / column.length));\n    result[i % column.length].y.push(el);\n  });\n  return result;\n};\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setReader\n) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nfunction handleStopStreaming(event, reader, setIsStreaming) {\n  //debugger;\n  console.log(reader);\n  reader.cancel();\n  setIsStreaming(false);\n}\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [reader, setReader] = React.useState();\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"source\", headerName: \"Device ID\", width: 240 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ];\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    setfilterLength(newValue);\n  };\n\n  useEffect(() => {\n    props.setLastValue(_.last(deviceRows));\n  }, [deviceRows]);\n\n  // props.setLastValue(newValue);\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Grid item xs={12}>\n            <Typography\n              align=\"center\"\n              component=\"h2\"\n              variant=\"h2\"\n              color=\"secondary\"\n            >\n              Test Mode: Recognition\n            </Typography>\n          </Grid>\n\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n\n          <Grid item xs={12}>\n            {isStreaming ? (\n              <div className={classes.controls}>\n                <Button\n                  aria-label=\"disconnect\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={() => {\n                    handleStopStreaming(\n                      \"stopstreaming\",\n                      reader,\n                      setIsStreaming\n                    );\n                  }}\n                >\n                  Stop Stream\n                </Button>\n              </div>\n            ) : (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStreamRequest(\n                        \"clicked\",\n                        `${process.env.REACT_APP_API_URL}results`,\n                        setDeviceRows,\n                        setIsStreaming,\n                        setReader\n                      );\n                    }}\n                  >\n                    Start Stream\n                </Button>\n                </div>\n              )}\n          </Grid>\n        </div>\n\n        <Grid item alignContent=\"center\" xs={12}>\n          <ResultsFilter\n            data={deviceRows}\n            filter_length={filterLength}\n          ></ResultsFilter>\n        </Grid>\n\n        <div className={classes.section1}>\n          <Divider variant=\"middle\" />\n        </div>\n\n        <Typography align=\"left\" color=\"primary\" component=\"h5\" variant=\"h5\">\n          Post Processing\n        </Typography>\n\n        <div className={classes.section1}>\n          <Divider variant=\"middle\" />\n        </div>\n\n        <Grid container spacing={4} rows alignItems=\"center\">\n          <Grid item xs={4}>\n            <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n              Buffer\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}>\n            <div className={classes.sliderroot}>\n              <Slider\n                value={typeof filterLength === \"number\" ? filterLength : 1}\n                onChange={handleFilterLengthSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={10}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={1}>\n            <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n              {filterLength}\n            </Typography>\n          </Grid>\n        </Grid>\n        <div className={classes.section1}>\n          <div style={{ height: 600, width: \"100%\" }}>\n            <DataGrid\n              rows={deviceRows}\n              columns={deviceColumns}\n              pageSize={15}\n              sortModel={[{ field: \"id\", sort: \"desc\" }]}\n            />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Results;\n","import {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst Record = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [recording, setRecording] = React.useState(props.isRecording);\n  const [filename, setFilename] = React.useState(\"filename\");\n  const [recordDistabled, setRecordDistabled] = React.useState(false);\n  console.log(\"Connected Camera\");\n  console.log(props.isCameraConnected);\n\n  const handleRecordRequest = (event, url, setRecording, filename) => {\n    setRecordDistabled(true);\n    console.log(event);\n\n    if (filename === \"\") {\n      filename = \"test\";\n    }\n    console.log(filename);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + url, {\n        filename: filename,\n        event_type: event,\n      })\n      .then((response) => {\n        console.log(response.data);\n        if (event === \"record-start\") {\n          setRecording(true);\n          console.log(event);\n        }\n        if (event === \"record-stop\") {\n          setRecording(false);\n          console.log(event);\n        }\n        setRecordDistabled(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setRecordDistabled(false);\n      });\n  };\n\n  const handleDownloadRequest = (event, filename) => {\n    console.log(`${process.env.REACT_APP_API_URL}download/` + filename);\n    fetch(`${process.env.REACT_APP_API_URL}download/` + filename, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/zip\" },\n    })\n      .then((response) => response.blob())\n      .then((blob) => {\n        // Create blob link to download\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", filename + \".zip\");\n\n        // Append to html link element page\n        document.body.appendChild(link);\n\n        // Start download\n        link.click();\n\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n      });\n  };\n  const handleFileNameChange = (event) => {\n    setFilename(event.target.value);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Typography component=\"h4\" variant=\"h4\" color=\"secondary\">\n            Record to Gateway\n          </Typography>\n        </div>\n        <Divider variant=\"middle\" />\n        <div className={classes.section2}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        </div>\n\n        <Grid container columns spacing={6}>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={filename}\n              onChange={handleFileNameChange}\n              fullWidth={true}\n              disabled={recording}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            {recording === false ? (\n              <Tooltip\n                title=\"This will record the device sensor data in .csv format to the gateway.\n                  If video source is connected, the video source will also be recorded.\n                  \"\n                aria-label=\"record\"\n              >\n                <Button\n                  aria-label=\"Record\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  disabled={recordDistabled}\n                  onClick={() => {\n                    handleRecordRequest(\n                      \"record-start\",\n                      props.isCameraConnected ? \"record\" : \"record-device\",\n                      setRecording,\n                      filename\n                    );\n                  }}\n                >\n                  Record\n                </Button>\n              </Tooltip>\n            ) : (\n              <Button\n                aria-label=\"Stop \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleRecordRequest(\n                    \"record-stop\",\n                    props.isCameraConnected ? \"record\" : \"record-device\",\n                    setRecording\n                  );\n                }}\n              >\n                Stop Recording\n              </Button>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            <Tooltip\n              title=\"Download the recorded .csv and .mp4 for this capture from the gateway. A .dcli file will also be generated describing the data.\n                  \"\n              aria-label=\"record\"\n            >\n              <Button\n                aria-label=\"Download \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleDownloadRequest(\"download\", filename);\n                }}\n              >\n                Download\n              </Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Record;\n","export const APP_API_URL = process.env.REACT_APP_API_URL || '/';\nexport const CLOUD_API_URL = process.env.REACT_APP_CLOUD_API_URL || 'https://sensiml.cloud/'\nexport const apiHosts = {\n  baseHost: APP_API_URL,\n  cloudHost: CLOUD_API_URL,\n};\n","import React, { useState } from \"react\";\nimport { Grid, Box, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport { Record } from \"../Record\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectClassImage } from \"../../redux/selectors/classes\"; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  classImageWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    marginTop: \"1rem\",\n    minHeight: \"350px\",\n  },\n\n  classImage: {\n    width: \"90%\",\n  },\n\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n}));\n\nconst TestMode = (props) => {\n  const classes = useStyles();\n  const [currentClass, setCurrentClass] = useState(\"\");\n  const classImage = useSelector(selectClassImage(currentClass));\n\n  const handleLastValue = (value) => {\n    setCurrentClass(value?.Classification || \"\");\n  };\n\n  return (\n    <Grid container rows spacing={6}>\n      {props.streamingMode !== \"recognition\" ? (\n        <Grid item xs={8}>\n          <SensorStream\n            columns={props.columns}\n            isConnected={props.isConnected}\n            dataType={props.dataType}\n          />\n        </Grid>\n      ) : (\n        <Grid item xs={6}>\n          <Results\n            setLastValue={handleLastValue}\n          />\n        </Grid>\n      )}\n      <Grid item xs={4}>\n        <Record\n          isCameraConnected={props.isCameraConnected}\n          isRecording={props.isRecording}\n        />\n        <Paper className={classes.imageWrapperCard}>\n          <Box className={classes.classImageWrapper}>\n            { classImage ?\n              <img  className={classes.classImage} src={classImage} alt={ currentClass }/>\n              : currentClass ? `No Image for ${currentClass}` : \"\"\n            }\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestMode;\n","import _ from \"lodash\";\nimport { APP_API_URL } from \"../../../configs\";\n\nexport const selectClassImage = className => (state) => {\n  const { classMapImages } = state.classes;\n  const classNameValid = _.toString(className);\n\n  if (classMapImages && classNameValid) {\n    const imgPath = classMapImages[classNameValid];\n    if (imgPath) {\n      console.log(\"imgPath\", imgPath)\n      return `${APP_API_URL}${imgPath}`;\n    }\n    return \"\";\n  }\n  return \"\";\n};\n","import React, { useCallback, useEffect, useLayoutEffect } from \"react\";\n\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { TestMode } from \"../TestMode\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector,  } from \"react-redux\";\nimport { STOP_STREAM_SENSOR_SAGA, FETCH_CLASS_MAP_IMAGES } from \"../../redux/actions/actionTypes\";\nimport axios from \"axios\";\n\n\nconst Main = (props) => {\n\n  const dispatch = useDispatch();\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState('DATA_CAPTURE');\n  const [streamingSource, setStreamingSource] = React.useState(null);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [isCameraConnected, setIsCameraConnected] = React.useState(false);\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [baudRate, setBaudRate] = React.useState(null);\n  const [config, setConfig] = React.useState({});\n  const [firstLoad, setFirstLoad] = React.useState(null);\n  const [dataType, setDataType] = React.useState('int16');\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isStreamingSensor } = useSelector((state) => state.stream);\n  const { errorDataMsg } = useSelector((state) => state.errors);\n\n  function handleChange(newValue) {\n    if (activeView !== newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  function mapdata(data) {\n    if (data.mode) {\n      setStreamingMode(data.mode);\n    }\n    setIsConnected(data.streaming);\n    setColumns(Object.keys(data.column_location).sort());\n    setStreamingSource(data.source?.toUpperCase());\n    setDeviceID(data.device_id);\n    setIsCameraConnected(data.camera_on);\n    setBaudRate(data.baud_rate);\n\n    switch (data.data_type) {\n      case ('int16'):\n        setDataType('int16');\n        break;\n      case ('float'):\n        setDataType('float');\n        break;\n      default:\n        setDataType('int16');\n    }\n\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    setConfig(data);\n  }\n\n  const alertUser = (e) => {\n    if (isStreamingSensor) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  };\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const fetchClassMapImages = useCallback(\n    () => dispatch({ type: FETCH_CLASS_MAP_IMAGES }),\n    [dispatch]\n  );\n\n  // before leave handler\n  useEffect(() => {\n    if (isStreamingSensor) {\n      window.addEventListener(\"beforeunload\", alertUser);\n      window.addEventListener(\"unload\", stopSensorStreaming);\n      return () => {\n        window.removeEventListener(\"beforeunload\", alertUser);\n        window.removeEventListener(\"unload\", stopSensorStreaming);\n        stopSensorStreaming();\n      };\n    }\n  }, [isStreamingSensor]);\n\n  useEffect(() => {\n    if (errorDataMsg) {\n      enqueueSnackbar(errorDataMsg, { variant: \"warning\" });\n    }\n  }, [errorDataMsg]);\n\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n      console.log(response.data)\n    });\n    fetchClassMapImages();\n  }, [activeView]);\n\n  useLayoutEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n    });\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar\n          onChange={handleChange}\n          isConnected={isConnected}\n          isCameraConnected={isCameraConnected}\n\n        />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Configure\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              isCameraConnected={isCameraConnected}\n              config={config}\n              setConfig={setConfig}\n              streamingSource={streamingSource}\n              baudRate={baudRate}\n              setBaudRate={setBaudRate}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            <TestMode\n              columns={columns}\n              streamingMode={streamingMode}\n              isConnected={isConnected}\n              isRecording={isRecording}\n              isCameraConnected={isCameraConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              samplerate={config.samplerate}\n              dataType={dataType}\n            />\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { call, delay, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_DATA_ERROR_MSG,\n} from \"../../actions/actionTypes\";\n\nfunction* handleErrorMsg(action) {\n  yield put({ type: SET_DATA_ERROR_MSG, payload: action.payload });\n  yield delay(1000);\n  yield put({ type: SET_DATA_ERROR_MSG, payload: null });\n}\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_DATA_ERROR_MSG, handleErrorMsg);\n}\n","export class BaseStreamHttpError extends Error {\n  constructor(errorCode, response) {\n    super();\n    if (errorCode !== 500) {\n      this.detail = response.detail;\n    } else {\n      this.detail = 'Server Error. Please, contact support.';\n    }\n    this.name = this.constructor.name;\n    this.errorCode = errorCode;\n  }\n}","import { BaseStreamHttpError } from \"./errors\";\n\nimport store from \"../../redux/store\";\n\nclass StreamReader {\n  /* *\n   * StreamReader class based on browser fetch method for handling stream data to\n   * @constructs\n   * @param {string} fetchUrl - endpoint fetch url\n   * */\n  constructor(fetchUrl) {\n    /* @param {string} fetchUrl - endpoint fetch url */\n    this.reader = undefined;\n    this.fetchUrl = fetchUrl;\n  }\n\n  async startStreaming() {\n    /*\n      fetch streaming endpoint and setup this.reader\n    */\n    let response;\n    console.log(\"getting response\");\n    try {\n      response = await fetch(this.fetchUrl);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        detail: \"Failed to fetch API service\",\n      });\n    }\n    if (!response.ok) {\n      throw new BaseStreamHttpError(response.status, {\n        detail: response.statusText,\n      });\n    }\n    console.log(\"getting reader\");\n    this.reader = response.body.getReader();\n  }\n\n  async stopStreaming() {\n    if (this.reader) {\n      this.reader.cancel();\n      this.reader = undefined;\n    }\n  }\n\n  async readStreamToRedux(actionType, countSamples = 0, dataType = 'int16') {\n    /*\n      read and write array by chunk to redux\n      @param {string} actionType - redux action const name\n      @param {number} maxLength - max length of redux streamed array\n    * */\n    console.log('DATA TYPE IS ' + dataType);\n    const arrayType = dataType === 'float' ? Float32Array : Int16Array;\n    while (true) {\n      const { value, done } = await this.reader.read();\n      if (done) break;\n      store.dispatch({\n        type: actionType,\n        payload: { chunk: new arrayType(value.buffer), countSamples },\n      });\n    }\n  }\n}\n\nexport { BaseStreamHttpError };\nexport default StreamReader;\n","import StreamReader from \"../../services/StreamReader\";\nimport { apiHosts } from \"../../configs\";\n\nexport let streamSensorReader = undefined;\n\nexport const initStreamSensorReader = () => {\n  streamSensorReader = new StreamReader(`${apiHosts.baseHost}stream`);\n};","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { BaseStreamHttpError } from \"../../../services/StreamReader\";\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_IS_STREAMING_SENSOR,\n  START_STREAM_SENSOR_SAGA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerStreamStart(action) {\n  try {\n    const { countSamples, dataType } = action?.payload;\n    console.log(action.payload);\n\n    yield call([streamSensorReader, \"startStreaming\"]);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: true });\n    yield call(\n      [streamSensorReader, \"readStreamToRedux\"],\n      SET_CHUNK_SENSOR_DATA_SAGA,\n      countSamples,\n      dataType,\n    );\n  } catch (e) {\n    console.debug(e);\n    if (e instanceof BaseStreamHttpError) {\n      yield put({ type: FETCH_DATA_ERROR_MSG, payload: e.detail });\n    } else {\n      yield put({\n        type: FETCH_DATA_ERROR_MSG,\n        payload: \"Failed to read stream data\",\n      });\n    }\n  }\n}\n\nexport default function* watchStreamSensorStart() {\n  yield takeLatest(START_STREAM_SENSOR_SAGA, workerStreamStart);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { SET_IS_STREAMING_SENSOR, STOP_STREAM_SENSOR_SAGA, } from \"../../actions/actionTypes\";\n\n\nfunction* workerStreamStop(action) {\n  try {\n    yield call([streamSensorReader, 'stopStreaming']);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: false });\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchStreamSensorStop() {\n  yield takeLatest(STOP_STREAM_SENSOR_SAGA, workerStreamStop);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchStreamSensorStart from \"./watchStreamSensorStart\";\nimport watchStreamSensorStop from \"./watchStreamSensorStop\";\n\nexport default function* streamSagas() {\n  yield all([\n    fork(watchStreamSensorStart),\n    fork(watchStreamSensorStop),\n  ]);\n}\n\n","import { put, select, takeLatest } from \"redux-saga/effects\";\nimport {\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerSetStreamChunkSensorData(action) {\n  try {\n    const { chunk, countSamples } = action.payload;\n    const chunkLength = (chunk && chunk.length) || 0;\n    let updatedSensorSimpleData = [];\n\n    const { sensorSimpleData, sensorRecordedData } = yield select(\n      (state) => state.sensorData\n    );\n    const { isStreamingSensorRecording } = yield select(\n      (state) => state.stream\n    );\n    console.log(\"called\", chunkLength / (2 * 6));\n\n    // when chunk greater than max of count samples set all chunk data or if countSamples == 0\n    if (chunkLength >= countSamples) {\n      updatedSensorSimpleData = [...chunk];\n    } else if (sensorSimpleData.length >= countSamples) {\n      // when reach countSamples limit\n      updatedSensorSimpleData = [...sensorSimpleData];\n      let [left, right, chunkI] = [0, sensorSimpleData.length, 0];\n      while (left < right) {\n        if (right - left > chunkLength) {\n          updatedSensorSimpleData[left] = sensorSimpleData[left + chunkLength];\n        } else {\n          updatedSensorSimpleData[left] = chunk[chunkI];\n          chunkI++;\n        }\n        left++;\n      }\n    } else {\n      updatedSensorSimpleData = [...sensorSimpleData, ...chunk];\n    }\n\n    yield put({\n      type: SET_STREAM_SENSOR_DATA,\n      payload: updatedSensorSimpleData,\n    });\n    // update whole list if recording\n    if (isStreamingSensorRecording) {\n      yield put({\n        type: SET_STREAM_SENSOR_RECORD_DATA,\n        payload: [...sensorRecordedData, ...chunk],\n      });\n    }\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchSetChunkSensorData() {\n  yield takeLatest(SET_CHUNK_SENSOR_DATA_SAGA, workerSetStreamChunkSensorData);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchSetChunkSensorData from \"./watchSetChunkSensorData\";\n\nexport default function* sensorDataSagas() {\n  yield all([\n    fork(watchSetChunkSensorData),\n  ]);\n}\n","import axios from \"axios\";\n\n\nconst ApiService = {\n  // Stores the 401 interceptor position so that it can be later ejected when needed\n  interceptor_401: null,\n  refreshUrl: '/auth/refresh',\n\n\n  init(baseURL) {\n    axios.defaults.baseURL = baseURL;\n  },\n\n\n  mount401Interceptor() {\n    this.interceptor_401 = axios.interceptors.response.use((response) => response,\n      async (error) => {\n        if (error.request.status === 401) {\n          if (error.config.url.includes('auth')) {\n            // Refresh token has failed or auth endpoint return 401 => Logout the user\n            throw error;\n          } else {\n            // refresh token\n          }\n        }\n        // If error was not 401 just reject as is\n        throw error;\n      });\n  },\n\n\n  unmount401Interceptor() {\n    // Eject the interceptor\n    axios.interceptors.response.eject(this.interceptor_401);\n  },\n\n  setCustomAuthHeader(key) {\n    axios.defaults.headers.common.Authorization = key;\n  },\n\n  setContentType(type) {\n    axios.defaults.headers.contentType = type;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  customRequest(data) {\n    return axios(data);\n  },\n\n  customJsonRequest(data) {\n    this.setAuthHeader();\n    this.setContentType('application/json');\n    return axios(data);\n  },\n\n};\n\nexport default ApiService;\n","/* eslint-disable require-yield */\nimport _ from \"lodash\";\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\n\nimport ApiService from \"../../../services/api\";\nimport {\n  FETCH_CLASS_MAP_IMAGES,\n  SET_CLASS_MAP_IMAGES,\n} from \"../../actions/actionTypes\";\n\n\nfunction* classesMapImagesSagas() {\n  const reponse = yield ApiService.get(\"class-map-images\");\n  yield console.log(\"classesMapImagesSagas\");\n  if (!_.isEmpty(reponse.data)) {\n    const payload = yield _.reduce(reponse.data, (acc, el) => {\n      acc[el.name] = el.img;\n      return acc;\n    }, [{}]);\n    yield put({ type: SET_CLASS_MAP_IMAGES, payload, });\n  }\n};\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_CLASS_MAP_IMAGES, classesMapImagesSagas);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchErrorSaga from \"./errors\";\nimport streamSagas from \"./stream\";\nimport sensorDataSagas from \"./sensorData\";\nimport classesSagas from \"./classes\";\n\nexport default function* rootSaga() {\n  yield all([\n    fork(streamSagas),\n    fork(watchErrorSaga),\n    fork(sensorDataSagas),\n    fork(classesSagas),\n  ]);\n}\n","import {\n  SET_GLOBAL_LOADER,\n} from '../../actions/actionTypes';\n\nconst initialState = {\n  globalLoader: false,\n};\n\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_GLOBAL_LOADER:\n      return {\n        ...state,\n        globalLoader: action.payload || false,\n      };\n    default:\n      return state;\n  }\n}","import { SET_DATA_ERROR_MSG } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  errorDataMsg: null,\n};\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_DATA_ERROR_MSG:\n      return {\n        ...state,\n        errorDataMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import { SET_IS_STREAMING_SENSOR, SET_IS_STREAMING_SENSOR_RECORDING, } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  isStreamingSensor: false,\n  isStreamingSensorRecording: false,\n};\n\nexport default function streamData(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_STREAMING_SENSOR:\n      return {\n        ...state,\n        isStreamingSensor: action.payload,\n      };\n    case SET_IS_STREAMING_SENSOR_RECORDING:\n      return {\n        ...state,\n        isStreamingSensorRecording: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import {\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n  SET_STREAM_SENSOR_DATA_RESET,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  localVersion: new Int16Array(),\n  sensorRecordedData: new Int16Array(),\n};\n\nexport default function sensorData(state = initialState, action) {\n  switch (action.type) {\n    case SET_STREAM_SENSOR_DATA_RESET:\n      return {\n        ...state,\n        sensorSimpleData: new Int16Array(),\n        sensorRecordedData: new Int16Array(),\n      };\n    case SET_STREAM_SENSOR_DATA:\n      return {\n        ...state,\n        sensorSimpleData: [...action.payload],\n      };\n    case SET_STREAM_SENSOR_RECORD_DATA:\n      return {\n        ...state,\n        sensorRecordedData: [...action.payload],\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CLASS_MAP_IMAGES } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  classMapImages: {},\n};\n\nexport default function classesData(state = initialState, action) {\n  switch (action.type) {\n    case SET_CLASS_MAP_IMAGES:\n      return {\n        ...state,\n        classMapImages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n    UPDATE_CLOUD_VERSION,\n    UPDATE_AVAILABLE,\n    UPDATE_LOCAL_VERSION,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n    localVersion: \"\",\n    cloudVersion: \"\",\n    updateAvailable: false\n}\n\nexport default function versionData(state = initialState, action) {\n    switch (action.type) {\n        case UPDATE_CLOUD_VERSION:\n            return {\n                ...state,\n                cloudVersion: action.payload\n            };\n        case UPDATE_AVAILABLE:\n            return {\n                ...state,\n                updateAvailable: state.localVersion < state.cloudVersion\n            };\n        case UPDATE_LOCAL_VERSION:\n            return {\n                ...state,\n                localVersion: action.payload,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\n// modules\nimport rootData from \"./root\";\nimport errors from \"./errors\";\nimport streamData from \"./stream\";\nimport sensorData from \"./sensorData\";\nimport classesData from \"./classes\";\nimport versionData from \"./version\";\n\nconst createAppReducer = () => combineReducers({\n  root: rootData,\n  errors,\n  stream: streamData,\n  sensorData,\n  versionData,\n  classes: classesData,\n});\n\nexport default createAppReducer;\n","import createSagaMiddleware from \"redux-saga\";\n\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootSaga from \"./sagas\";\nimport createAppReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancers = [];\n\nconst middleware = [\n  sagaMiddleware,\n];\n\nconst composedEnhancers = composeWithDevTools(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst appReducer = createAppReducer();\n\nconst store = createStore(\n  appReducer,\n  composedEnhancers,\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import \"./App.css\";\n\nimport React, {useEffect} from \"react\";\nimport {LightTheme} from \"./components/Themes\";\nimport {Main} from \"./components/Main\";\nimport {Provider} from \"react-redux\";\nimport {SnackbarProvider} from \"notistack\";\n\nimport store from \"./redux/store\";\nimport {initStreamSensorReader} from \"./redux/repositories/StreamSensorReader\";\n\nimport ApiService from \"./services/api\";\nimport {apiHosts} from \"./configs\";\n\nApiService.init(apiHosts.baseHost);\n// initialize StreamSensorReader for handle as entrypoint\ninitStreamSensorReader();\n\nconst App = (props) => {\n    useEffect(() => {\n        const updateVersion = async () => {\n            await props.versionCheck.checkUpdate();\n        };\n        // noinspection JSIgnoredPromiseFromCall\n        updateVersion();\n\n    }, []);\n    return (\n        <LightTheme>\n            <Provider store={store}>\n                <SnackbarProvider\n                    anchorOrigin={{\n                        horizontal: \"right\",\n                        vertical: \"top\",\n                    }}\n                    autoHideDuration={2000}\n                >\n                    <Main />\n                </SnackbarProvider>\n            </Provider>\n        </LightTheme>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {VersionCheck} from \"./services/VersionCheck\";\nimport {apiHosts} from \"./configs\";\n\nconst versionCheck = new VersionCheck(apiHosts.baseHost, apiHosts.cloudHost);\n\nReactDOM.render(\n  <App versionCheck={versionCheck}/>,\n  document.getElementById('root'),\n);\n","import axios from \"axios\";\nimport {BaseStreamHttpError} from \"../StreamReader\";\nimport store from \"../../redux/store\";\nimport { useDispatch, connect } from \"react-redux\";\nimport {UPDATE_AVAILABLE, UPDATE_CLOUD_VERSION, UPDATE_LOCAL_VERSION} from \"../../redux/actions/actionTypes\";\n\nexport class VersionCheck {\n    constructor(baseURL, cloudURL) {\n        this.baseurl = baseURL;\n        this.cloudurl = cloudURL;\n        this.localVersion = \"\";\n        this.cloudVersion = \"\";\n        this.updateAvailable = false;\n    }\n\n    async checkUpdate() {\n        let localResponse;\n        let response;\n        try {\n            localResponse = await axios.get(`${this.baseurl}version`);\n        } catch (error) {\n            console.log(error);\n            throw new BaseStreamHttpError(404, {\n                detail: \"Failed to fetch API service\",\n            });\n        }\n        if (localResponse.statusText !== \"OK\") {\n            throw new BaseStreamHttpError(response.status, {\n                detail: localResponse.statusText,\n            });\n        }\n        this.localVersion = localResponse.data\n        store.dispatch({type: UPDATE_LOCAL_VERSION, payload: localResponse.data});\n\n        try {\n            let url = `${this.cloudurl}version/?format=json`\n            response = await axios.get(url, {\n                headers: {'Content-Type': 'application/json'},\n            });\n        } catch (error) {\n            console.log(error);\n            return;\n        }\n        if (response.statusText !== \"OK\") {\n            return;\n        }\n        let cloudResp = response.data;\n        if(cloudResp.SensiML_Open_Gateway_Windows) {\n            this.cloudVersion = cloudResp.SensiML_Open_Gateway_Windows;\n            store.dispatch({type: UPDATE_CLOUD_VERSION, payload: cloudResp.SensiML_Open_Gateway_Windows});\n            store.dispatch({type: UPDATE_AVAILABLE, payload: (this.localVersion < this.cloudVersion)});\n        }\n\n    }\n}\n"],"sourceRoot":""}